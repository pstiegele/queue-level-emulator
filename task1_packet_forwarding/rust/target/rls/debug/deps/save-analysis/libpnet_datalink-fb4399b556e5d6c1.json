{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0","program":"/home/pstiegele/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","pnet_datalink","/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=fb4399b556e5d6c1","-C","extra-filename=-fb4399b556e5d6c1","--out-dir","/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps","-L","dependency=/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps","--extern","ipnetwork=/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps/libipnetwork-15ce1735c3bcba2c.rmeta","--extern","libc=/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps/liblibc-b8961b7ab7703893.rmeta","--extern","pnet_base=/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps/libpnet_base-88cfad1d670d1717.rmeta","--extern","pnet_sys=/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps/libpnet_sys-cc680116157e1dc7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pstiegele/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps/libpnet_datalink-fb4399b556e5d6c1.rmeta"},"prelude":{"crate_id":{"name":"pnet_datalink","disambiguator":[13397312815020298418,16762038897454614908]},"crate_root":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src","external_crates":[{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":15,"id":{"name":"ipnetwork","disambiguator":[15283980477283858081,15927310547964725862]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":16,"id":{"name":"serde","disambiguator":[13445573176919416771,6792951793616445379]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":17,"id":{"name":"libc","disambiguator":[5768993445313267847,2666719229643263260]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":18,"id":{"name":"pnet_base","disambiguator":[18347817919667666179,1935369616263037661]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","num":19,"id":{"name":"pnet_sys","disambiguator":[8000475852130457415,8249336601676615715]}}],"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":375,"byte_end":10367,"line_start":9,"line_end":339,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":42},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":641,"byte_end":648,"line_start":22,"line_end":22,"column_start":21,"column_end":28},"alias_span":null,"name":"MacAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":93},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":650,"byte_end":665,"line_start":22,"line_end":22,"column_start":30,"column_end":45},"alias_span":null,"name":"ParseMacAddrErr","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":375,"byte_end":10367,"line_start":9,"line_end":339,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":38},{"krate":0,"index":108},{"krate":0,"index":178},{"krate":0,"index":214},{"krate":0,"index":294},{"krate":0,"index":313},{"krate":0,"index":312},{"krate":0,"index":310},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":304},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":215},{"krate":0,"index":315},{"krate":0,"index":344},{"krate":0,"index":343},{"krate":0,"index":341},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":335},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":346},{"krate":0,"index":364},{"krate":0,"index":363},{"krate":0,"index":361},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":355},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":366},{"krate":0,"index":387},{"krate":0,"index":386},{"krate":0,"index":384},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":378},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":389},{"krate":0,"index":407},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":398},{"krate":0,"index":395},{"krate":0,"index":230},{"krate":0,"index":237},{"krate":0,"index":242}],"decl_id":null,"docs":" Support for sending and receiving data link layer packets.\n","sig":null,"attributes":[{"value":"! Support for sending and receiving data link layer packets.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":375,"byte_end":437,"line_start":9,"line_end":9,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":108},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linux","qualname":"::linux","value":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":265},{"krate":0,"index":285},{"krate":0,"index":284},{"krate":0,"index":282},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":276},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":133},{"krate":0,"index":141},{"krate":0,"index":146},{"krate":0,"index":152},{"krate":0,"index":155}],"decl_id":null,"docs":" Support for sending and receiving data link layer packets using Linux's `AF_PACKET`.\n","sig":null,"attributes":[{"value":"cfg(any (target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":902,"byte_end":957,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"! Support for sending and receiving data link layer packets using Linux's `AF_PACKET`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":12786,"byte_end":12874,"line_start":9,"line_end":9,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":265},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":13801,"byte_end":13807,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"Config","qualname":"::linux::Config","value":"Config { write_buffer_size, read_buffer_size, read_timeout, write_timeout, channel_type, fanout }","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" Configuration for the Linux datalink backend.\n","sig":null,"attributes":[{"value":"/ Configuration for the Linux datalink backend.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":13689,"byte_end":13738,"line_start":43,"line_end":43,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":266},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":13892,"byte_end":13909,"line_start":47,"line_end":47,"column_start":9,"column_end":26},"name":"write_buffer_size","qualname":"::linux::Config::write_buffer_size","value":"usize","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" The size of buffer to use when writing packets. Defaults to 4096.\n","sig":null,"attributes":[{"value":"/ The size of buffer to use when writing packets. Defaults to 4096.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":13814,"byte_end":13883,"line_start":46,"line_end":46,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":267},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14001,"byte_end":14017,"line_start":50,"line_end":50,"column_start":9,"column_end":25},"name":"read_buffer_size","qualname":"::linux::Config::read_buffer_size","value":"usize","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" The size of buffer to use when reading packets. Defaults to 4096.\n","sig":null,"attributes":[{"value":"/ The size of buffer to use when reading packets. Defaults to 4096.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":13923,"byte_end":13992,"line_start":49,"line_end":49,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":268},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14079,"byte_end":14091,"line_start":53,"line_end":53,"column_start":9,"column_end":21},"name":"read_timeout","qualname":"::linux::Config::read_timeout","value":"std::option::Option<std::time::Duration>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" The read timeout. Defaults to None.\n","sig":null,"attributes":[{"value":"/ The read timeout. Defaults to None.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14031,"byte_end":14070,"line_start":52,"line_end":52,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":269},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14165,"byte_end":14178,"line_start":56,"line_end":56,"column_start":9,"column_end":22},"name":"write_timeout","qualname":"::linux::Config::write_timeout","value":"std::option::Option<std::time::Duration>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" The write timeout. Defaults to None.\n","sig":null,"attributes":[{"value":"/ The write timeout. Defaults to None.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14116,"byte_end":14156,"line_start":55,"line_end":55,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":270},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14355,"byte_end":14367,"line_start":61,"line_end":61,"column_start":9,"column_end":21},"name":"channel_type","qualname":"::linux::Config::channel_type","value":"ChannelType","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Specifies whether to read packets at the datalink layer or network layer.\n NOTE FIXME Currently ignored.\n Defaults to Layer2.\n","sig":null,"attributes":[{"value":"/ Specifies whether to read packets at the datalink layer or network layer.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14203,"byte_end":14280,"line_start":58,"line_end":58,"column_start":5,"column_end":82}},{"value":"/ NOTE FIXME Currently ignored.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14285,"byte_end":14318,"line_start":59,"line_end":59,"column_start":5,"column_end":38}},{"value":"/ Defaults to Layer2.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14323,"byte_end":14346,"line_start":60,"line_end":60,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":271},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14468,"byte_end":14474,"line_start":64,"line_end":64,"column_start":9,"column_end":15},"name":"fanout","qualname":"::linux::Config::fanout","value":"std::option::Option<FanoutOption>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Specifies packet fanout option, if desired. Defaults to None.\n","sig":null,"attributes":[{"value":"/ Specifies packet fanout option, if desired. Defaults to None.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14394,"byte_end":14459,"line_start":63,"line_end":63,"column_start":5,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":129},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":15334,"byte_end":15341,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"channel","qualname":"::linux::channel","value":"fn (network_interface: &NetworkInterface, config: Config) -> io::Result<super::Channel>","parent":null,"children":[],"decl_id":null,"docs":" Create a data link channel using the Linux's `AF_PACKET` socket type.\n","sig":null,"attributes":[{"value":"/ Create a data link channel using the Linux's `AF_PACKET` socket type.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":15243,"byte_end":15316,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"inline","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":15317,"byte_end":15326,"line_start":94,"line_end":94,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":155},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":24846,"byte_end":24856,"line_start":365,"line_end":365,"column_start":8,"column_end":18},"name":"interfaces","qualname":"::linux::interfaces","value":"fn () -> Vec<NetworkInterface>","parent":null,"children":[],"decl_id":null,"docs":" Get a list of available network interfaces for the current machine.\n","sig":null,"attributes":[{"value":"/ Get a list of available network interfaces for the current machine.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":24767,"byte_end":24838,"line_start":364,"line_end":364,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":178},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dummy","qualname":"::dummy","value":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":287},{"krate":0,"index":292},{"krate":0,"index":191},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213}],"decl_id":null,"docs":" Support for sending and receiving data link layer packets on a fake network managed\n by in memory FIFO queues. Useful for writing tests.\n","sig":null,"attributes":[{"value":"! Support for sending and receiving data link layer packets on a fake network managed","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":30533,"byte_end":30620,"line_start":9,"line_end":9,"column_start":1,"column_end":88}},{"value":"! by in memory FIFO queues. Useful for writing tests.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":30621,"byte_end":30676,"line_start":10,"line_end":10,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":287},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31009,"byte_end":31015,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Config","qualname":"::dummy::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":" Configuration for the dummy datalink backend. Contains `std::sync::mpsc`\n channels that are used to communicate with the fake network.\n","sig":null,"attributes":[{"value":"/ Configuration for the dummy datalink backend. Contains `std::sync::mpsc`","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":30839,"byte_end":30915,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ channels that are used to communicate with the fake network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":30916,"byte_end":30980,"line_start":20,"line_end":20,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31941,"byte_end":31944,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"fn (receiver: Receiver<io::Result<Box<[u8]>>>, sender: Sender<Box<[u8]>>) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Config` with the given channels as the backing network.\n When using this constructor `inject_handle` and `read_handle` will return `None`.\n Those handles must be kept track of elsewhere.","sig":null,"attributes":[{"value":"/ Creates a new `Config` with the given channels as the backing network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31222,"byte_end":31296,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ When using this constructor `inject_handle` and `read_handle` will return `None`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31301,"byte_end":31386,"line_start":32,"line_end":32,"column_start":5,"column_end":90}},{"value":"/ Those handles must be kept track of elsewhere.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31391,"byte_end":31441,"line_start":33,"line_end":33,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31446,"byte_end":31449,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The `DataLinkReceiver` created by the dummy backend will read packets from","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31454,"byte_end":31532,"line_start":35,"line_end":35,"column_start":5,"column_end":83}},{"value":"/ `receiver`. Both network errors and data can be sent on this channel.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31537,"byte_end":31610,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ When the `receiver` channel is closed (`Sender` is dropped)","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31615,"byte_end":31678,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"/ `DataLinkReceiver::next()` will sleep forever, simlating an idle network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31683,"byte_end":31760,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31765,"byte_end":31768,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The `DataLinkSender` created by the dummy backend will send all packets sent","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31773,"byte_end":31853,"line_start":40,"line_end":40,"column_start":5,"column_end":85}},{"value":"/ through `build_and_send()` and `send_to()` to the `sender` channel.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31858,"byte_end":31929,"line_start":41,"line_end":41,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":32336,"byte_end":32349,"line_start":53,"line_end":53,"column_start":12,"column_end":25},"name":"inject_handle","qualname":"<Config>::inject_handle","value":"fn (&mut self) -> Option<Sender<io::Result<Box<[u8]>>>>","parent":null,"children":[],"decl_id":null,"docs":" Get the `Sender` handle that can inject packets in the fake network.\n Only usable with `Config`s generated from `default()`.\n","sig":null,"attributes":[{"value":"/ Get the `Sender` handle that can inject packets in the fake network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":32189,"byte_end":32261,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/ Only usable with `Config`s generated from `default()`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":32266,"byte_end":32324,"line_start":52,"line_end":52,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":32605,"byte_end":32616,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"read_handle","qualname":"<Config>::read_handle","value":"fn (&mut self) -> Option<Receiver<Box<[u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Get the `Receiver` handle where packets sent to the fake network can be read.\n Only usable with `Config`s generated from `default()`.\n","sig":null,"attributes":[{"value":"/ Get the `Receiver` handle where packets sent to the fake network can be read.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":32449,"byte_end":32530,"line_start":57,"line_end":57,"column_start":5,"column_end":86}},{"value":"/ Only usable with `Config`s generated from `default()`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":32535,"byte_end":32593,"line_start":58,"line_end":58,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":200},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":33609,"byte_end":33616,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::dummy::channel","value":"fn (_: &NetworkInterface, config: Config) -> io::Result<super::Channel>","parent":null,"children":[],"decl_id":null,"docs":" Create a data link channel backed by FIFO queues. Useful for debugging and testing.\n See `Config` for how to inject and read packets on this fake network.\n","sig":null,"attributes":[{"value":"/ Create a data link channel backed by FIFO queues. Useful for debugging and testing.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":33440,"byte_end":33527,"line_start":86,"line_end":86,"column_start":1,"column_end":88}},{"value":"/ See `Config` for how to inject and read packets on this fake network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":33528,"byte_end":33601,"line_start":87,"line_end":87,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":211},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":35992,"byte_end":36002,"line_start":159,"line_end":159,"column_start":8,"column_end":18},"name":"interfaces","qualname":"::dummy::interfaces","value":"fn () -> Vec<NetworkInterface>","parent":null,"children":[],"decl_id":null,"docs":" Get three fake interfaces generated with `dummy_interface(0..3)`.\n","sig":null,"attributes":[{"value":"/ Get three fake interfaces generated with `dummy_interface(0..3)`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":35915,"byte_end":35984,"line_start":158,"line_end":158,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":213},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":36272,"byte_end":36287,"line_start":167,"line_end":167,"column_start":8,"column_end":23},"name":"dummy_interface","qualname":"::dummy::dummy_interface","value":"fn (i: u8) -> NetworkInterface","parent":null,"children":[],"decl_id":null,"docs":" Generates a fake `NetworkInterface`.\n The name of the interface will be `ethX` where X is the integer `i`.\n The index will be `i`.\n The MAC will be `01:02:03:04:05:i`.\n","sig":null,"attributes":[{"value":"/ Generates a fake `NetworkInterface`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":36084,"byte_end":36124,"line_start":163,"line_end":163,"column_start":1,"column_end":41}},{"value":"/ The name of the interface will be `ethX` where X is the integer `i`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":36125,"byte_end":36197,"line_start":164,"line_end":164,"column_start":1,"column_end":73}},{"value":"/ The index will be `i`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":36198,"byte_end":36224,"line_start":165,"line_end":165,"column_start":1,"column_end":27}},{"value":"/ The MAC will be `01:02:03:04:05:i`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":36225,"byte_end":36264,"line_start":166,"line_end":166,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":214},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1441,"byte_end":1450,"line_start":66,"line_end":66,"column_start":10,"column_end":19},"name":"EtherType","qualname":"::EtherType","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Type alias for an `EtherType`.\n","sig":null,"attributes":[{"value":"/ Type alias for an `EtherType`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1397,"byte_end":1431,"line_start":65,"line_end":65,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":295},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1662,"byte_end":1668,"line_start":72,"line_end":72,"column_start":5,"column_end":11},"name":"Layer2","qualname":"::ChannelType::Layer2","value":"ChannelType::Layer2","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Send and receive layer 2 packets directly, including headers.\n","sig":null,"attributes":[{"value":"/ Send and receive layer 2 packets directly, including headers.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1592,"byte_end":1657,"line_start":71,"line_end":71,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":297},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1758,"byte_end":1764,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"name":"Layer3","qualname":"::ChannelType::Layer3","value":"ChannelType::Layer3(EtherType)","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Send and receive \"cooked\" packets - send and receive network layer packets.\n","sig":null,"attributes":[{"value":"/ Send and receive \"cooked\" packets - send and receive network layer packets.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1674,"byte_end":1753,"line_start":73,"line_end":73,"column_start":5,"column_end":84}}]},{"kind":"Enum","id":{"krate":0,"index":294},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1574,"byte_end":1585,"line_start":70,"line_end":70,"column_start":10,"column_end":21},"name":"ChannelType","qualname":"::ChannelType","value":"ChannelType::{Layer2, Layer3}","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":297}],"decl_id":null,"docs":" Type of data link channel to present (Linux only).\n","sig":null,"attributes":[{"value":"/ Type of data link channel to present (Linux only).","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1459,"byte_end":1513,"line_start":68,"line_end":68,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":216},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2258,"byte_end":2266,"line_start":90,"line_end":90,"column_start":5,"column_end":13},"name":"Ethernet","qualname":"::Channel::Ethernet","value":"Channel::Ethernet(Box<dyn DataLinkSender>, Box<dyn DataLinkReceiver>)","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" A datalink channel which sends and receives Ethernet packets.\n","sig":null,"attributes":[{"value":"/ A datalink channel which sends and receives Ethernet packets.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2188,"byte_end":2253,"line_start":89,"line_end":89,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":220},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2474,"byte_end":2525,"line_start":95,"line_end":95,"column_start":5,"column_end":56},"name":"PleaseIncludeACatchAllVariantWhenMatchingOnThisEnum","qualname":"::Channel::PleaseIncludeACatchAllVariantWhenMatchingOnThisEnum","value":"Channel::PleaseIncludeACatchAllVariantWhenMatchingOnThisEnum","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" This variant should never be used.","sig":null,"attributes":[{"value":"/ This variant should never be used.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2325,"byte_end":2363,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2368,"byte_end":2371,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Including it allows new variants to be added to `Channel` without breaking existing code.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2376,"byte_end":2469,"line_start":94,"line_end":94,"column_start":5,"column_end":98}}]},{"kind":"Enum","id":{"krate":0,"index":215},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2174,"byte_end":2181,"line_start":88,"line_end":88,"column_start":10,"column_end":17},"name":"Channel","qualname":"::Channel","value":"Channel::{Ethernet, PleaseIncludeACatchAllVariantWhenMatchingOnThisEnum}","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":220}],"decl_id":null,"docs":" A channel for sending and receiving at the data link layer.","sig":null,"attributes":[{"value":"/ A channel for sending and receiving at the data link layer.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1780,"byte_end":1843,"line_start":77,"line_end":77,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1844,"byte_end":1847,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ NOTE: It is important to always include a catch-all variant in match statements using this","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1848,"byte_end":1942,"line_start":79,"line_end":79,"column_start":1,"column_end":95}},{"value":"/ enum, since new variants may be added. For example:","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1943,"byte_end":1998,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1999,"byte_end":2002,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2003,"byte_end":2016,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/ match some_channel {","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2017,"byte_end":2041,"line_start":83,"line_end":83,"column_start":1,"column_end":25}},{"value":"/     Ethernet(tx, rx) => { /* Handle Ethernet packets */ },","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2042,"byte_end":2104,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/     _ => panic!(\"Unhandled channel type\")","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2105,"byte_end":2150,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2151,"byte_end":2156,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2157,"byte_end":2164,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":316},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2644,"byte_end":2648,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"HASH","qualname":"::FanoutType::HASH","value":"FanoutType::HASH","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":318},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2654,"byte_end":2656,"line_start":102,"line_end":102,"column_start":5,"column_end":7},"name":"LB","qualname":"::FanoutType::LB","value":"FanoutType::LB","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":320},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2662,"byte_end":2665,"line_start":103,"line_end":103,"column_start":5,"column_end":8},"name":"CPU","qualname":"::FanoutType::CPU","value":"FanoutType::CPU","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":322},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2671,"byte_end":2679,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"ROLLOVER","qualname":"::FanoutType::ROLLOVER","value":"FanoutType::ROLLOVER","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":324},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2685,"byte_end":2688,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"RND","qualname":"::FanoutType::RND","value":"FanoutType::RND","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":326},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2694,"byte_end":2696,"line_start":106,"line_end":106,"column_start":5,"column_end":7},"name":"QM","qualname":"::FanoutType::QM","value":"FanoutType::QM","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":328},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2702,"byte_end":2706,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"CBPF","qualname":"::FanoutType::CBPF","value":"FanoutType::CBPF","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":330},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2712,"byte_end":2716,"line_start":108,"line_end":108,"column_start":5,"column_end":9},"name":"EBPF","qualname":"::FanoutType::EBPF","value":"FanoutType::EBPF","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":315},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2627,"byte_end":2637,"line_start":100,"line_end":100,"column_start":10,"column_end":20},"name":"FanoutType","qualname":"::FanoutType","value":"FanoutType::{HASH, LB, CPU, ROLLOVER, RND, QM, CBPF, EBPF}","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330}],"decl_id":null,"docs":" Socket fanout type (Linux only).\n","sig":null,"attributes":[{"value":"/ Socket fanout type (Linux only).","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2530,"byte_end":2566,"line_start":98,"line_end":98,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2817,"byte_end":2829,"line_start":113,"line_end":113,"column_start":12,"column_end":24},"name":"FanoutOption","qualname":"::FanoutOption","value":"FanoutOption { group_id, fanout_type, defrag, rollover }","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"decl_id":null,"docs":" Fanout settings (Linux only).\n","sig":null,"attributes":[{"value":"/ Fanout settings (Linux only).","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2721,"byte_end":2754,"line_start":111,"line_end":111,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":347},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2840,"byte_end":2848,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"group_id","qualname":"::FanoutOption::group_id","value":"u16","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":348},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2863,"byte_end":2874,"line_start":115,"line_end":115,"column_start":9,"column_end":20},"name":"fanout_type","qualname":"::FanoutOption::fanout_type","value":"FanoutType","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":349},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2896,"byte_end":2902,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"name":"defrag","qualname":"::FanoutOption::defrag","value":"bool","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":350},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2918,"byte_end":2926,"line_start":117,"line_end":117,"column_start":9,"column_end":17},"name":"rollover","qualname":"::FanoutOption::rollover","value":"bool","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":366},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3216,"byte_end":3222,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config { write_buffer_size, read_buffer_size, read_timeout, write_timeout, channel_type, bpf_fd_attempts, linux_fanout }","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373}],"decl_id":null,"docs":" A generic configuration type, encapsulating all options supported by each backend.","sig":null,"attributes":[{"value":"/ A generic configuration type, encapsulating all options supported by each backend.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":2937,"byte_end":3023,"line_start":120,"line_end":120,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3024,"byte_end":3027,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Each option should be treated as a hint - each backend is free to ignore any and all","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3028,"byte_end":3116,"line_start":122,"line_end":122,"column_start":1,"column_end":89}},{"value":"/ options which don't apply to it.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3117,"byte_end":3153,"line_start":123,"line_end":123,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":367},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3307,"byte_end":3324,"line_start":127,"line_end":127,"column_start":9,"column_end":26},"name":"write_buffer_size","qualname":"::Config::write_buffer_size","value":"usize","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":" The size of buffer to use when writing packets. Defaults to 4096.\n","sig":null,"attributes":[{"value":"/ The size of buffer to use when writing packets. Defaults to 4096.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3229,"byte_end":3298,"line_start":126,"line_end":126,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":368},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3416,"byte_end":3432,"line_start":130,"line_end":130,"column_start":9,"column_end":25},"name":"read_buffer_size","qualname":"::Config::read_buffer_size","value":"usize","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":" The size of buffer to use when reading packets. Defaults to 4096.\n","sig":null,"attributes":[{"value":"/ The size of buffer to use when reading packets. Defaults to 4096.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3338,"byte_end":3407,"line_start":129,"line_end":129,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":369},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3517,"byte_end":3529,"line_start":133,"line_end":133,"column_start":9,"column_end":21},"name":"read_timeout","qualname":"::Config::read_timeout","value":"std::option::Option<std::time::Duration>","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":" Linux/BPF/Netmap only: The read timeout. Defaults to None.\n","sig":null,"attributes":[{"value":"/ Linux/BPF/Netmap only: The read timeout. Defaults to None.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3446,"byte_end":3508,"line_start":132,"line_end":132,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":370},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3626,"byte_end":3639,"line_start":136,"line_end":136,"column_start":9,"column_end":22},"name":"write_timeout","qualname":"::Config::write_timeout","value":"std::option::Option<std::time::Duration>","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":" Linux/BPF/Netmap only: The write timeout. Defaults to None.\n","sig":null,"attributes":[{"value":"/ Linux/BPF/Netmap only: The write timeout. Defaults to None.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3554,"byte_end":3617,"line_start":135,"line_end":135,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":371},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3789,"byte_end":3801,"line_start":140,"line_end":140,"column_start":9,"column_end":21},"name":"channel_type","qualname":"::Config::channel_type","value":"ChannelType","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":" Linux only: Specifies whether to read packets at the datalink layer or network layer.\n Defaults to Layer2\n","sig":null,"attributes":[{"value":"/ Linux only: Specifies whether to read packets at the datalink layer or network layer.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3664,"byte_end":3753,"line_start":138,"line_end":138,"column_start":5,"column_end":94}},{"value":"/ Defaults to Layer2","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3758,"byte_end":3780,"line_start":139,"line_end":139,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":372},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3943,"byte_end":3958,"line_start":144,"line_end":144,"column_start":9,"column_end":24},"name":"bpf_fd_attempts","qualname":"::Config::bpf_fd_attempts","value":"usize","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":" BPF/OS X only: The number of /dev/bpf* file descriptors to attempt before failing. Defaults\n to: 1000.\n","sig":null,"attributes":[{"value":"/ BPF/OS X only: The number of /dev/bpf* file descriptors to attempt before failing. Defaults","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3821,"byte_end":3916,"line_start":142,"line_end":142,"column_start":5,"column_end":100}},{"value":"/ to: 1000.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3921,"byte_end":3934,"line_start":143,"line_end":143,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":373},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":3976,"byte_end":3988,"line_start":146,"line_end":146,"column_start":9,"column_end":21},"name":"linux_fanout","qualname":"::Config::linux_fanout","value":"std::option::Option<FanoutOption>","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":224},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4890,"byte_end":4897,"line_start":175,"line_end":175,"column_start":8,"column_end":15},"name":"channel","qualname":"::channel","value":"fn (network_interface: &NetworkInterface, configuration: Config) -> io::Result<Channel>","parent":null,"children":[],"decl_id":null,"docs":" Create a new datalink channel for sending and receiving data.","sig":null,"attributes":[{"value":"/ Create a new datalink channel for sending and receiving data.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4358,"byte_end":4423,"line_start":163,"line_end":163,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4424,"byte_end":4427,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ This allows for sending and receiving packets at the data link layer.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4428,"byte_end":4501,"line_start":165,"line_end":165,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4502,"byte_end":4505,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ A list of network interfaces can be retrieved using datalink::interfaces().","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4506,"byte_end":4585,"line_start":167,"line_end":167,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4586,"byte_end":4589,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ The configuration serves as a hint to the backend - some or all of it may be used or ignored,","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4590,"byte_end":4687,"line_start":169,"line_end":169,"column_start":1,"column_end":98}},{"value":"/ depending on which backend is used.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4688,"byte_end":4727,"line_start":170,"line_end":170,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4728,"byte_end":4731,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ When matching on the returned channel, make sure to include a catch-all so that code doesn't","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4732,"byte_end":4828,"line_start":172,"line_end":172,"column_start":1,"column_end":97}},{"value":"/ break when new channel types are added.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4829,"byte_end":4872,"line_start":173,"line_end":173,"column_start":1,"column_end":44}},{"value":"inline","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4873,"byte_end":4882,"line_start":174,"line_end":174,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":225},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5109,"byte_end":5123,"line_start":180,"line_end":180,"column_start":11,"column_end":25},"name":"DataLinkSender","qualname":"::DataLinkSender","value":"DataLinkSender: Send","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"decl_id":null,"docs":" Trait to enable sending `$packet` packets.\n","sig":null,"attributes":[{"value":"/ Trait to enable sending `$packet` packets.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5052,"byte_end":5098,"line_start":179,"line_end":179,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5514,"byte_end":5528,"line_start":187,"line_end":187,"column_start":8,"column_end":22},"name":"build_and_send","qualname":"::DataLinkSender::build_and_send","value":"fn (&mut self, num_packets: usize, packet_size: usize, func: &mut dyn FnMut(&mut [u8])) -> Option<io::Result<()>>","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":" Create and send a number of packets.","sig":null,"attributes":[{"value":"/ Create and send a number of packets.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5136,"byte_end":5176,"line_start":181,"line_end":181,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5181,"byte_end":5184,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This will call `func` `num_packets` times. The function will be provided with a","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5189,"byte_end":5272,"line_start":183,"line_end":183,"column_start":5,"column_end":88}},{"value":"/ mutable packet to manipulate, which will then be sent. This allows packets to be","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5277,"byte_end":5361,"line_start":184,"line_end":184,"column_start":5,"column_end":89}},{"value":"/ built in-place, avoiding the copy required for `send`. If there is not sufficient","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5366,"byte_end":5451,"line_start":185,"line_end":185,"column_start":5,"column_end":90}},{"value":"/ capacity in the buffer, None will be returned.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5456,"byte_end":5506,"line_start":186,"line_end":186,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5930,"byte_end":5937,"line_start":199,"line_end":199,"column_start":8,"column_end":15},"name":"send_to","qualname":"::DataLinkSender::send_to","value":"fn (&mut self, packet: &[u8], dst: Option<NetworkInterface>) -> Option<io::Result<()>>","parent":{"krate":0,"index":225},"children":[],"decl_id":null,"docs":" Send a packet.","sig":null,"attributes":[{"value":"/ Send a packet.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5684,"byte_end":5702,"line_start":194,"line_end":194,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5707,"byte_end":5710,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This may require an additional copy compared to `build_and_send`, depending on the","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5715,"byte_end":5801,"line_start":196,"line_end":196,"column_start":5,"column_end":91}},{"value":"/ operating system being used. The second parameter is currently ignored, however","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5806,"byte_end":5889,"line_start":197,"line_end":197,"column_start":5,"column_end":88}},{"value":"/ `None` should be passed.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5894,"byte_end":5922,"line_start":198,"line_end":198,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":228},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6149,"byte_end":6165,"line_start":204,"line_end":204,"column_start":11,"column_end":27},"name":"DataLinkReceiver","qualname":"::DataLinkReceiver","value":"DataLinkReceiver: Send","parent":null,"children":[{"krate":0,"index":229}],"decl_id":null,"docs":" Structure for receiving packets at the data link layer. Should be constructed using\n `datalink_channel()`.\n","sig":null,"attributes":[{"value":"/ Structure for receiving packets at the data link layer. Should be constructed using","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6025,"byte_end":6112,"line_start":202,"line_end":202,"column_start":1,"column_end":88}},{"value":"/ `datalink_channel()`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6113,"byte_end":6138,"line_start":203,"line_end":203,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6233,"byte_end":6237,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"next","qualname":"::DataLinkReceiver::next","value":"fn (&mut self) -> io::Result<&[u8]>","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Get the next ethernet frame in the channel.\n","sig":null,"attributes":[{"value":"/ Get the next ethernet frame in the channel.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6178,"byte_end":6225,"line_start":205,"line_end":205,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6395,"byte_end":6411,"line_start":211,"line_end":211,"column_start":12,"column_end":28},"name":"NetworkInterface","qualname":"::NetworkInterface","value":"NetworkInterface { name, index, mac, ips, flags }","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"decl_id":null,"docs":" Represents a network interface and its associated addresses.\n","sig":null,"attributes":[{"value":"/ Represents a network interface and its associated addresses.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6274,"byte_end":6338,"line_start":209,"line_end":209,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":390},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6457,"byte_end":6461,"line_start":213,"line_end":213,"column_start":9,"column_end":13},"name":"name","qualname":"::NetworkInterface::name","value":"std::string::String","parent":{"krate":0,"index":389},"children":[],"decl_id":null,"docs":" The name of the interface.\n","sig":null,"attributes":[{"value":"/ The name of the interface.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6418,"byte_end":6448,"line_start":212,"line_end":212,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":391},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6536,"byte_end":6541,"line_start":215,"line_end":215,"column_start":9,"column_end":14},"name":"index","qualname":"::NetworkInterface::index","value":"u32","parent":{"krate":0,"index":389},"children":[],"decl_id":null,"docs":" The interface index (operating system specific).\n","sig":null,"attributes":[{"value":"/ The interface index (operating system specific).","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6475,"byte_end":6527,"line_start":214,"line_end":214,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":392},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6597,"byte_end":6600,"line_start":217,"line_end":217,"column_start":9,"column_end":12},"name":"mac","qualname":"::NetworkInterface::mac","value":"std::option::Option<pnet_base::MacAddr>","parent":{"krate":0,"index":389},"children":[],"decl_id":null,"docs":" A MAC address for the interface.\n","sig":null,"attributes":[{"value":"/ A MAC address for the interface.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6552,"byte_end":6588,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":393},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6680,"byte_end":6683,"line_start":219,"line_end":219,"column_start":9,"column_end":12},"name":"ips","qualname":"::NetworkInterface::ips","value":"std::vec::Vec<ipnetwork::IpNetwork>","parent":{"krate":0,"index":389},"children":[],"decl_id":null,"docs":" IP addresses and netmasks for the interface.\n","sig":null,"attributes":[{"value":"/ IP addresses and netmasks for the interface.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6623,"byte_end":6671,"line_start":218,"line_end":218,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":394},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6768,"byte_end":6773,"line_start":221,"line_end":221,"column_start":9,"column_end":14},"name":"flags","qualname":"::NetworkInterface::flags","value":"u32","parent":{"krate":0,"index":389},"children":[],"decl_id":null,"docs":" Operating system specific flags for the interface.\n","sig":null,"attributes":[{"value":"/ Operating system specific flags for the interface.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6705,"byte_end":6759,"line_start":220,"line_end":220,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":7001,"byte_end":7012,"line_start":230,"line_end":230,"column_start":12,"column_end":23},"name":"mac_address","qualname":"<NetworkInterface>::mac_address","value":"fn (&self) -> MacAddr","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the MAC address associated with the interface.\n","sig":null,"attributes":[{"value":"/ Retrieve the MAC address associated with the interface.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6811,"byte_end":6870,"line_start":225,"line_end":225,"column_start":5,"column_end":64}},{"value":"deprecated(since = \"0.26.0\", note =\n             \"Please use NetworkInterface's field 'mac' instead.\")","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6875,"byte_end":6989,"line_start":226,"line_end":229,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":7077,"byte_end":7082,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"is_up","qualname":"<NetworkInterface>::is_up","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":7169,"byte_end":7181,"line_start":237,"line_end":237,"column_start":12,"column_end":24},"name":"is_broadcast","qualname":"<NetworkInterface>::is_broadcast","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":7322,"byte_end":7333,"line_start":241,"line_end":241,"column_start":12,"column_end":23},"name":"is_loopback","qualname":"<NetworkInterface>::is_loopback","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the interface a loopback interface?\n","sig":null,"attributes":[{"value":"/ Is the interface a loopback interface?","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":7268,"byte_end":7310,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":7426,"byte_end":7443,"line_start":244,"line_end":244,"column_start":12,"column_end":29},"name":"is_point_to_point","qualname":"<NetworkInterface>::is_point_to_point","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":7539,"byte_end":7551,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"is_multicast","qualname":"<NetworkInterface>::is_multicast","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":242},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":10300,"byte_end":10310,"line_start":337,"line_end":337,"column_start":8,"column_end":18},"name":"interfaces","qualname":"::interfaces","value":"fn () -> Vec<NetworkInterface>","parent":null,"children":[],"decl_id":null,"docs":" Get a list of available network interfaces for the current machine.","sig":null,"attributes":[{"value":"/ Get a list of available network interfaces for the current machine.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9394,"byte_end":9465,"line_start":311,"line_end":311,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9466,"byte_end":9469,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ If you need the default network interface, you can choose the first","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9470,"byte_end":9541,"line_start":313,"line_end":313,"column_start":1,"column_end":72}},{"value":"/ one that is up, not loopback and has an IP. This is not guaranteed to","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9542,"byte_end":9615,"line_start":314,"line_end":314,"column_start":1,"column_end":74}},{"value":"/ work on each system but should work for basic packet sniffing:","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9616,"byte_end":9682,"line_start":315,"line_end":315,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9683,"byte_end":9686,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9687,"byte_end":9694,"line_start":317,"line_end":317,"column_start":1,"column_end":8}},{"value":"/ use pnet_datalink::interfaces;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9695,"byte_end":9729,"line_start":318,"line_end":318,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9730,"byte_end":9733,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ // Get a vector with all network interfaces found","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9734,"byte_end":9787,"line_start":320,"line_end":320,"column_start":1,"column_end":54}},{"value":"/ let all_interfaces = interfaces();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9788,"byte_end":9826,"line_start":321,"line_end":321,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9827,"byte_end":9830,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ // Search for the default interface - the one that is","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9831,"byte_end":9888,"line_start":323,"line_end":323,"column_start":1,"column_end":58}},{"value":"/ // up, not loopback and has an IP.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9889,"byte_end":9927,"line_start":324,"line_end":324,"column_start":1,"column_end":39}},{"value":"/ let default_interface = all_interfaces","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9928,"byte_end":9970,"line_start":325,"line_end":325,"column_start":1,"column_end":43}},{"value":"/     .iter()","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9971,"byte_end":9986,"line_start":326,"line_end":326,"column_start":1,"column_end":16}},{"value":"/     .filter(|e| e.is_up() && !e.is_loopback() && e.ips.len() > 0)","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":9987,"byte_end":10056,"line_start":327,"line_end":327,"column_start":1,"column_end":70}},{"value":"/     .next();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":10057,"byte_end":10073,"line_start":328,"line_end":328,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":10074,"byte_end":10077,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ match default_interface {","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":10078,"byte_end":10107,"line_start":330,"line_end":330,"column_start":1,"column_end":30}},{"value":"/     Some(interface) => println!(\"Found default interface with [{}].\", interface.name),","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":10108,"byte_end":10198,"line_start":331,"line_end":331,"column_start":1,"column_end":91}},{"value":"/     None => println!(\"Error while finding the default interface.\"),","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":10199,"byte_end":10270,"line_start":332,"line_end":332,"column_start":1,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":10271,"byte_end":10276,"line_start":333,"line_end":333,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":10277,"byte_end":10280,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":10281,"byte_end":10288,"line_start":335,"line_end":335,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":10289,"byte_end":10292,"line_start":336,"line_end":336,"column_start":1,"column_end":4}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14545,"byte_end":14551,"line_start":67,"line_end":67,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14951,"byte_end":14957,"line_start":80,"line_end":80,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":20039,"byte_end":20057,"line_start":228,"line_end":228,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":23596,"byte_end":23616,"line_start":330,"line_end":330,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14545,"byte_end":14551,"line_start":67,"line_end":67,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14951,"byte_end":14957,"line_start":80,"line_end":80,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":20039,"byte_end":20057,"line_start":228,"line_end":228,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":23596,"byte_end":23616,"line_start":330,"line_end":330,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31209,"byte_end":31215,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":32739,"byte_end":32745,"line_start":64,"line_end":64,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":32941,"byte_end":32947,"line_start":71,"line_end":71,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":34042,"byte_end":34060,"line_start":104,"line_end":104,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":34906,"byte_end":34926,"line_start":132,"line_end":132,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4032,"byte_end":4038,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6788,"byte_end":6804,"line_start":224,"line_end":224,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":7666,"byte_end":7682,"line_start":252,"line_end":252,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":966,"byte_end":971,"line_start":41,"line_end":41,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":108}},{"kind":"Mod","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":1389,"byte_end":1394,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":178}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14545,"byte_end":14551,"line_start":67,"line_end":67,"column_start":38,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14951,"byte_end":14957,"line_start":80,"line_end":80,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":20039,"byte_end":20057,"line_start":228,"line_end":228,"column_start":25,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":63},"to":{"krate":0,"index":225}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":23596,"byte_end":23616,"line_start":330,"line_end":330,"column_start":27,"column_end":47},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":76},"to":{"krate":0,"index":228}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14545,"byte_end":14551,"line_start":67,"line_end":67,"column_start":38,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":14951,"byte_end":14957,"line_start":80,"line_end":80,"column_start":18,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":20039,"byte_end":20057,"line_start":228,"line_end":228,"column_start":25,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":133},"to":{"krate":0,"index":225}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/linux.rs","byte_start":23596,"byte_end":23616,"line_start":330,"line_end":330,"column_start":27,"column_end":47},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":146},"to":{"krate":0,"index":228}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":31209,"byte_end":31215,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":32739,"byte_end":32745,"line_start":64,"line_end":64,"column_start":38,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":32941,"byte_end":32947,"line_start":71,"line_end":71,"column_start":18,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":34042,"byte_end":34060,"line_start":104,"line_end":104,"column_start":25,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":201},"to":{"krate":0,"index":225}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/dummy.rs","byte_start":34906,"byte_end":34926,"line_start":132,"line_end":132,"column_start":27,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":206},"to":{"krate":0,"index":228}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":4032,"byte_end":4038,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":366},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":5125,"byte_end":5129,"line_start":180,"line_end":180,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":225}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6167,"byte_end":6171,"line_start":204,"line_end":204,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":228}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":6788,"byte_end":6804,"line_start":224,"line_end":224,"column_start":6,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.26.0/src/lib.rs","byte_start":7666,"byte_end":7682,"line_start":252,"line_end":252,"column_start":30,"column_end":46},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":5983}}]}