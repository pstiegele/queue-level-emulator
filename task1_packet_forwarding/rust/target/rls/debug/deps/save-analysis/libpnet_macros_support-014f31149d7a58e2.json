{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0","program":"/home/pstiegele/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","pnet_macros_support","/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=014f31149d7a58e2","-C","extra-filename=-014f31149d7a58e2","--out-dir","/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps","-L","dependency=/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps","--extern","pnet_base=/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps/libpnet_base-88cfad1d670d1717.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pstiegele/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps/libpnet_macros_support-014f31149d7a58e2.rmeta"},"prelude":{"crate_id":{"name":"pnet_macros_support","disambiguator":[9749645614615955481,17387270143145937380]},"crate_root":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src","external_crates":[{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","num":15,"id":{"name":"pnet_base","disambiguator":[18347817919667666179,1935369616263037661]}}],"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","byte_start":370,"byte_end":596,"line_start":9,"line_end":18,"column_start":1,"column_end":15}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","byte_start":370,"byte_end":596,"line_start":9,"line_end":18,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":54}],"decl_id":null,"docs":" Support library for `libpnet_macros`.","sig":null,"attributes":[{"value":"! Support library for `libpnet_macros`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","byte_start":370,"byte_end":411,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","byte_start":412,"byte_end":415,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! This exists to remove the need for the plugin_as_library feature, and allow for static linking.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","byte_start":416,"byte_end":515,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"deny(missing_docs)","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","byte_start":517,"byte_end":539,"line_start":13,"line_end":13,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"packet","qualname":"::packet","value":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":230},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":31},{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":252},{"krate":0,"index":256},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":36},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":286},{"krate":0,"index":290},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51}],"decl_id":null,"docs":" Packet helpers for `pnet_macros`.\n","sig":null,"attributes":[{"value":"! Packet helpers for `pnet_macros`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":980,"byte_end":1017,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1174,"byte_end":1180,"line_start":15,"line_end":15,"column_start":11,"column_end":17},"name":"Packet","qualname":"::packet::Packet","value":"Packet","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" Represents a generic network packet.\n","sig":null,"attributes":[{"value":"/ Represents a generic network packet.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1123,"byte_end":1163,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1245,"byte_end":1251,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"packet","qualname":"::packet::Packet::packet","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Retrieve the underlying buffer for the packet.\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying buffer for the packet.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1187,"byte_end":1237,"line_start":16,"line_end":16,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1322,"byte_end":1329,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"payload","qualname":"::packet::Packet::payload","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Retrieve the payload for the packet.\n","sig":null,"attributes":[{"value":"/ Retrieve the payload for the packet.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1274,"byte_end":1314,"line_start":19,"line_end":19,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":18},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1411,"byte_end":1424,"line_start":24,"line_end":24,"column_start":11,"column_end":24},"name":"MutablePacket","qualname":"::packet::MutablePacket","value":"MutablePacket: Packet","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"decl_id":null,"docs":" Represents a generic, mutable, network packet.\n","sig":null,"attributes":[{"value":"/ Represents a generic, mutable, network packet.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1350,"byte_end":1400,"line_start":23,"line_end":23,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1507,"byte_end":1517,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"packet_mut","qualname":"::packet::MutablePacket::packet_mut","value":"fn (&mut self) -> &mut [u8]","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Retreive the underlying, mutable, buffer for the packet.\n","sig":null,"attributes":[{"value":"/ Retreive the underlying, mutable, buffer for the packet.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1439,"byte_end":1499,"line_start":25,"line_end":25,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1604,"byte_end":1615,"line_start":29,"line_end":29,"column_start":8,"column_end":19},"name":"payload_mut","qualname":"::packet::MutablePacket::payload_mut","value":"fn (&mut self) -> &mut [u8]","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Retreive the mutable payload for the packet.\n","sig":null,"attributes":[{"value":"/ Retreive the mutable payload for the packet.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1548,"byte_end":1596,"line_start":28,"line_end":28,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1700,"byte_end":1710,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"clone_from","qualname":"::packet::MutablePacket::clone_from","value":"fn <T> (&mut self, other: &T) -> ()","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Initialize this packet by cloning another.\n","sig":null,"attributes":[{"value":"/ Initialize this packet by cloning another.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1646,"byte_end":1692,"line_start":31,"line_end":31,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2128,"byte_end":2138,"line_start":47,"line_end":47,"column_start":11,"column_end":21},"name":"FromPacket","qualname":"::packet::FromPacket","value":"FromPacket: Packet","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" Used to convert on-the-wire packets to their #[packet] equivalent.\n","sig":null,"attributes":[{"value":"/ Used to convert on-the-wire packets to their #[packet] equivalent.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2047,"byte_end":2117,"line_start":46,"line_end":46,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2206,"byte_end":2207,"line_start":49,"line_end":49,"column_start":10,"column_end":11},"name":"T","qualname":"::packet::FromPacket::T","value":"type T;","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" The type of the packet to convert from.\n","sig":null,"attributes":[{"value":"/ The type of the packet to convert from.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2153,"byte_end":2196,"line_start":48,"line_end":48,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2283,"byte_end":2294,"line_start":52,"line_end":52,"column_start":8,"column_end":19},"name":"from_packet","qualname":"::packet::FromPacket::from_packet","value":"fn (&self) -> Self::T","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Converts a wire-format packet to #[packet] struct format.\n","sig":null,"attributes":[{"value":"/ Converts a wire-format packet to #[packet] struct format.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2214,"byte_end":2275,"line_start":51,"line_end":51,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2483,"byte_end":2493,"line_start":57,"line_end":57,"column_start":11,"column_end":21},"name":"PacketSize","qualname":"::packet::PacketSize","value":"PacketSize: Packet","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" Used to find the calculated size of the packet. This is used for occasions where the underlying\n buffer is not the same length as the packet itself.\n","sig":null,"attributes":[{"value":"/ Used to find the calculated size of the packet. This is used for occasions where the underlying","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2317,"byte_end":2416,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"/ buffer is not the same length as the packet itself.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2417,"byte_end":2472,"line_start":56,"line_end":56,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2558,"byte_end":2569,"line_start":59,"line_end":59,"column_start":8,"column_end":19},"name":"packet_size","qualname":"::packet::PacketSize::packet_size","value":"fn (&self) -> usize","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Get the calculated size of the packet.\n","sig":null,"attributes":[{"value":"/ Get the calculated size of the packet.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2508,"byte_end":2550,"line_start":58,"line_end":58,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":232},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3278,"byte_end":3283,"line_start":88,"line_end":88,"column_start":5,"column_end":10},"name":"Owned","qualname":"::packet::PacketData::Owned","value":"PacketData::Owned(Vec<u8>)","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" A packet owns its contents.\n","sig":null,"attributes":[{"value":"/ A packet owns its contents.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3242,"byte_end":3273,"line_start":87,"line_end":87,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":235},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3337,"byte_end":3345,"line_start":90,"line_end":90,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::packet::PacketData::Borrowed","value":"PacketData::Borrowed(&'p [u8])","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" A packet borrows its contents.\n","sig":null,"attributes":[{"value":"/ A packet borrows its contents.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3298,"byte_end":3332,"line_start":89,"line_end":89,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":230},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3221,"byte_end":3231,"line_start":86,"line_end":86,"column_start":10,"column_end":20},"name":"PacketData","qualname":"::packet::PacketData","value":"PacketData::{Owned, Borrowed}","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":235}],"decl_id":null,"docs":" Packet data.\n","sig":null,"attributes":[{"value":"/ Packet data.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3174,"byte_end":3190,"line_start":84,"line_end":84,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3437,"byte_end":3445,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<PacketData>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a slice of the packet data.\n","sig":null,"attributes":[{"value":"/ Get a slice of the packet data.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3390,"byte_end":3425,"line_start":94,"line_end":94,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3656,"byte_end":3668,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"to_immutable","qualname":"<PacketData>::to_immutable","value":"fn (self) -> PacketData<'p>","parent":null,"children":[],"decl_id":null,"docs":" No-op - returns `self`.\n","sig":null,"attributes":[{"value":"/ No-op - returns `self`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3617,"byte_end":3644,"line_start":102,"line_end":102,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3763,"byte_end":3766,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"len","qualname":"<PacketData>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" A length of the packet data.\n","sig":null,"attributes":[{"value":"/ A length of the packet data.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3719,"byte_end":3751,"line_start":107,"line_end":107,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":266},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4158,"byte_end":4163,"line_start":123,"line_end":123,"column_start":5,"column_end":10},"name":"Owned","qualname":"::packet::MutPacketData::Owned","value":"MutPacketData::Owned(Vec<u8>)","parent":{"krate":0,"index":264},"children":[],"decl_id":null,"docs":" Owned mutable packet data.\n","sig":null,"attributes":[{"value":"/ Owned mutable packet data.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4123,"byte_end":4153,"line_start":122,"line_end":122,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":269},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4216,"byte_end":4224,"line_start":125,"line_end":125,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::packet::MutPacketData::Borrowed","value":"MutPacketData::Borrowed(&'p mut [u8])","parent":{"krate":0,"index":264},"children":[],"decl_id":null,"docs":" Borrowed mutable packet data.\n","sig":null,"attributes":[{"value":"/ Borrowed mutable packet data.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4178,"byte_end":4211,"line_start":124,"line_end":124,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":264},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4099,"byte_end":4112,"line_start":121,"line_end":121,"column_start":10,"column_end":23},"name":"MutPacketData","qualname":"::packet::MutPacketData","value":"MutPacketData::{Owned, Borrowed}","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":269}],"decl_id":null,"docs":" Mutable packet data.\n","sig":null,"attributes":[{"value":"/ Mutable packet data.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4044,"byte_end":4068,"line_start":119,"line_end":119,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4319,"byte_end":4327,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<MutPacketData>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get packet data as a slice.\n","sig":null,"attributes":[{"value":"/ Get packet data as a slice.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4276,"byte_end":4307,"line_start":129,"line_end":129,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4556,"byte_end":4568,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<MutPacketData>::as_mut_slice","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get packet data as a mutable slice.\n","sig":null,"attributes":[{"value":"/ Get packet data as a mutable slice.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4505,"byte_end":4544,"line_start":137,"line_end":137,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4830,"byte_end":4842,"line_start":146,"line_end":146,"column_start":12,"column_end":24},"name":"to_immutable","qualname":"<MutPacketData>::to_immutable","value":"fn (self) -> PacketData<'p>","parent":null,"children":[],"decl_id":null,"docs":" Get an immutable version of packet data.\n","sig":null,"attributes":[{"value":"/ Get an immutable version of packet data.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4774,"byte_end":4818,"line_start":145,"line_end":145,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":5102,"byte_end":5105,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"len","qualname":"<MutPacketData>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get a length of data in the packet.\n","sig":null,"attributes":[{"value":"/ Get a length of data in the packet.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":5051,"byte_end":5090,"line_start":153,"line_end":153,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":5727,"byte_end":5742,"line_start":172,"line_end":172,"column_start":11,"column_end":26},"name":"PrimitiveValues","qualname":"::packet::PrimitiveValues","value":"PrimitiveValues","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"decl_id":null,"docs":" Used to convert a type to primitive values representing it.\n","sig":null,"attributes":[{"value":"/ Used to convert a type to primitive values representing it.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":5653,"byte_end":5716,"line_start":171,"line_end":171,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":43},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":5812,"byte_end":5813,"line_start":174,"line_end":174,"column_start":10,"column_end":11},"name":"T","qualname":"::packet::PrimitiveValues::T","value":"type T;","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" A tuple of types, to represent the current value.\n","sig":null,"attributes":[{"value":"/ A tuple of types, to represent the current value.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":5749,"byte_end":5802,"line_start":173,"line_end":173,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":5883,"byte_end":5902,"line_start":177,"line_end":177,"column_start":8,"column_end":27},"name":"to_primitive_values","qualname":"::packet::PrimitiveValues::to_primitive_values","value":"fn (&self) -> Self::T","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Convert a value to primitive types representing it.\n","sig":null,"attributes":[{"value":"/ Convert a value to primitive types representing it.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":5820,"byte_end":5875,"line_start":176,"line_end":176,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":54},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":" Provides type aliases for various primitive integer types","sig":null,"attributes":[{"value":"! Provides type aliases for various primitive integer types","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7197,"byte_end":7258,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7259,"byte_end":7262,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! These types are aliased to the next largest of [`u8`, `u16`, `u32`, `u64`], and purely serve as","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7263,"byte_end":7362,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"! hints for the `#[packet]` macro to enable the generation of the correct bit manipulations to","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7363,"byte_end":7459,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"! get the value out of a packet.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7460,"byte_end":7494,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7495,"byte_end":7498,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! They should NOT be used outside of data types marked as `#[packet]`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7499,"byte_end":7571,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7572,"byte_end":7575,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! All aliases for types larger than `u8` contain a `be` or `le` suffix. These specify whether the","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7576,"byte_end":7675,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"! value is big or little endian, respectively. When using `set_*()` and `get_*()` methods, host","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7676,"byte_end":7773,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"! endianness should be used - the methods will convert as appropriate.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7774,"byte_end":7846,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7848,"byte_end":7879,"line_start":21,"line_end":21,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":55},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7962,"byte_end":7964,"line_start":26,"line_end":26,"column_start":10,"column_end":12},"name":"u1","qualname":"::types::u1","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned, 1-bit integer.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned, 1-bit integer.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7910,"byte_end":7952,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":56},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8024,"byte_end":8026,"line_start":29,"line_end":29,"column_start":10,"column_end":12},"name":"u2","qualname":"::types::u2","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned, 2-bit integer.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned, 2-bit integer.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":7972,"byte_end":8014,"line_start":28,"line_end":28,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8086,"byte_end":8088,"line_start":32,"line_end":32,"column_start":10,"column_end":12},"name":"u3","qualname":"::types::u3","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned, 3-bit integer.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned, 3-bit integer.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8034,"byte_end":8076,"line_start":31,"line_end":31,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8148,"byte_end":8150,"line_start":35,"line_end":35,"column_start":10,"column_end":12},"name":"u4","qualname":"::types::u4","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned, 4-bit integer.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned, 4-bit integer.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8096,"byte_end":8138,"line_start":34,"line_end":34,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8210,"byte_end":8212,"line_start":38,"line_end":38,"column_start":10,"column_end":12},"name":"u5","qualname":"::types::u5","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned, 5-bit integer.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned, 5-bit integer.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8158,"byte_end":8200,"line_start":37,"line_end":37,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":60},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8272,"byte_end":8274,"line_start":41,"line_end":41,"column_start":10,"column_end":12},"name":"u6","qualname":"::types::u6","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned, 6-bit integer.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned, 6-bit integer.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8220,"byte_end":8262,"line_start":40,"line_end":40,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":61},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8334,"byte_end":8336,"line_start":44,"line_end":44,"column_start":10,"column_end":12},"name":"u7","qualname":"::types::u7","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned, 7-bit integer.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned, 7-bit integer.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8282,"byte_end":8324,"line_start":43,"line_end":43,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":62},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8546,"byte_end":8550,"line_start":48,"line_end":48,"column_start":10,"column_end":14},"name":"u9be","qualname":"::types::u9be","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 9-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 9-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8344,"byte_end":8440,"line_start":46,"line_end":46,"column_start":1,"column_end":97}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8441,"byte_end":8536,"line_start":47,"line_end":47,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":63},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8762,"byte_end":8767,"line_start":52,"line_end":52,"column_start":10,"column_end":15},"name":"u10be","qualname":"::types::u10be","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 10-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 10-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8559,"byte_end":8656,"line_start":50,"line_end":50,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8657,"byte_end":8752,"line_start":51,"line_end":51,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":64},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8979,"byte_end":8984,"line_start":56,"line_end":56,"column_start":10,"column_end":15},"name":"u11be","qualname":"::types::u11be","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 11-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 11-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8776,"byte_end":8873,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8874,"byte_end":8969,"line_start":55,"line_end":55,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":65},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9196,"byte_end":9201,"line_start":60,"line_end":60,"column_start":10,"column_end":15},"name":"u12be","qualname":"::types::u12be","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 12-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 12-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":8993,"byte_end":9090,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9091,"byte_end":9186,"line_start":59,"line_end":59,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":66},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9413,"byte_end":9418,"line_start":64,"line_end":64,"column_start":10,"column_end":15},"name":"u13be","qualname":"::types::u13be","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 13-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 13-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9210,"byte_end":9307,"line_start":62,"line_end":62,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9308,"byte_end":9403,"line_start":63,"line_end":63,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":67},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9630,"byte_end":9635,"line_start":68,"line_end":68,"column_start":10,"column_end":15},"name":"u14be","qualname":"::types::u14be","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 14-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 14-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9427,"byte_end":9524,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9525,"byte_end":9620,"line_start":67,"line_end":67,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":68},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9847,"byte_end":9852,"line_start":72,"line_end":72,"column_start":10,"column_end":15},"name":"u15be","qualname":"::types::u15be","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 15-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 15-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9644,"byte_end":9741,"line_start":70,"line_end":70,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9742,"byte_end":9837,"line_start":71,"line_end":71,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":69},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10064,"byte_end":10069,"line_start":76,"line_end":76,"column_start":10,"column_end":15},"name":"u16be","qualname":"::types::u16be","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 16-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 16-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9861,"byte_end":9958,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":9959,"byte_end":10054,"line_start":75,"line_end":75,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":70},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10281,"byte_end":10286,"line_start":80,"line_end":80,"column_start":10,"column_end":15},"name":"u17be","qualname":"::types::u17be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 17-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 17-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10078,"byte_end":10175,"line_start":78,"line_end":78,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10176,"byte_end":10271,"line_start":79,"line_end":79,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":71},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10498,"byte_end":10503,"line_start":84,"line_end":84,"column_start":10,"column_end":15},"name":"u18be","qualname":"::types::u18be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 18-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 18-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10295,"byte_end":10392,"line_start":82,"line_end":82,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10393,"byte_end":10488,"line_start":83,"line_end":83,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":72},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10715,"byte_end":10720,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"name":"u19be","qualname":"::types::u19be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 19-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 19-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10512,"byte_end":10609,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10610,"byte_end":10705,"line_start":87,"line_end":87,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":73},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10932,"byte_end":10937,"line_start":92,"line_end":92,"column_start":10,"column_end":15},"name":"u20be","qualname":"::types::u20be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 20-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 20-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10729,"byte_end":10826,"line_start":90,"line_end":90,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10827,"byte_end":10922,"line_start":91,"line_end":91,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":74},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11149,"byte_end":11154,"line_start":96,"line_end":96,"column_start":10,"column_end":15},"name":"u21be","qualname":"::types::u21be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 21-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 21-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":10946,"byte_end":11043,"line_start":94,"line_end":94,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11044,"byte_end":11139,"line_start":95,"line_end":95,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":75},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11366,"byte_end":11371,"line_start":100,"line_end":100,"column_start":10,"column_end":15},"name":"u22be","qualname":"::types::u22be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 22-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 22-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11163,"byte_end":11260,"line_start":98,"line_end":98,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11261,"byte_end":11356,"line_start":99,"line_end":99,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11583,"byte_end":11588,"line_start":104,"line_end":104,"column_start":10,"column_end":15},"name":"u23be","qualname":"::types::u23be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 23-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 23-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11380,"byte_end":11477,"line_start":102,"line_end":102,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11478,"byte_end":11573,"line_start":103,"line_end":103,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":77},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11800,"byte_end":11805,"line_start":108,"line_end":108,"column_start":10,"column_end":15},"name":"u24be","qualname":"::types::u24be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 24-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 24-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11597,"byte_end":11694,"line_start":106,"line_end":106,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11695,"byte_end":11790,"line_start":107,"line_end":107,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":78},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12017,"byte_end":12022,"line_start":112,"line_end":112,"column_start":10,"column_end":15},"name":"u25be","qualname":"::types::u25be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 25-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 25-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11814,"byte_end":11911,"line_start":110,"line_end":110,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":11912,"byte_end":12007,"line_start":111,"line_end":111,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":79},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12234,"byte_end":12239,"line_start":116,"line_end":116,"column_start":10,"column_end":15},"name":"u26be","qualname":"::types::u26be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 26-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 26-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12031,"byte_end":12128,"line_start":114,"line_end":114,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12129,"byte_end":12224,"line_start":115,"line_end":115,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":80},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12451,"byte_end":12456,"line_start":120,"line_end":120,"column_start":10,"column_end":15},"name":"u27be","qualname":"::types::u27be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 27-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 27-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12248,"byte_end":12345,"line_start":118,"line_end":118,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12346,"byte_end":12441,"line_start":119,"line_end":119,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12668,"byte_end":12673,"line_start":124,"line_end":124,"column_start":10,"column_end":15},"name":"u28be","qualname":"::types::u28be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 28-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 28-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12465,"byte_end":12562,"line_start":122,"line_end":122,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12563,"byte_end":12658,"line_start":123,"line_end":123,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12885,"byte_end":12890,"line_start":128,"line_end":128,"column_start":10,"column_end":15},"name":"u29be","qualname":"::types::u29be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 29-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 29-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12682,"byte_end":12779,"line_start":126,"line_end":126,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12780,"byte_end":12875,"line_start":127,"line_end":127,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":83},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13102,"byte_end":13107,"line_start":132,"line_end":132,"column_start":10,"column_end":15},"name":"u30be","qualname":"::types::u30be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 30-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 30-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12899,"byte_end":12996,"line_start":130,"line_end":130,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":12997,"byte_end":13092,"line_start":131,"line_end":131,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":84},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13319,"byte_end":13324,"line_start":136,"line_end":136,"column_start":10,"column_end":15},"name":"u31be","qualname":"::types::u31be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 31-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 31-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13116,"byte_end":13213,"line_start":134,"line_end":134,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13214,"byte_end":13309,"line_start":135,"line_end":135,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":85},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13536,"byte_end":13541,"line_start":140,"line_end":140,"column_start":10,"column_end":15},"name":"u32be","qualname":"::types::u32be","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 32-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 32-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13333,"byte_end":13430,"line_start":138,"line_end":138,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13431,"byte_end":13526,"line_start":139,"line_end":139,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":86},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13753,"byte_end":13758,"line_start":144,"line_end":144,"column_start":10,"column_end":15},"name":"u33be","qualname":"::types::u33be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 33-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 33-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13550,"byte_end":13647,"line_start":142,"line_end":142,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13648,"byte_end":13743,"line_start":143,"line_end":143,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":87},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13970,"byte_end":13975,"line_start":148,"line_end":148,"column_start":10,"column_end":15},"name":"u34be","qualname":"::types::u34be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 34-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 34-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13767,"byte_end":13864,"line_start":146,"line_end":146,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13865,"byte_end":13960,"line_start":147,"line_end":147,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":88},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14187,"byte_end":14192,"line_start":152,"line_end":152,"column_start":10,"column_end":15},"name":"u35be","qualname":"::types::u35be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 35-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 35-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":13984,"byte_end":14081,"line_start":150,"line_end":150,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14082,"byte_end":14177,"line_start":151,"line_end":151,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":89},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14404,"byte_end":14409,"line_start":156,"line_end":156,"column_start":10,"column_end":15},"name":"u36be","qualname":"::types::u36be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 36-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 36-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14201,"byte_end":14298,"line_start":154,"line_end":154,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14299,"byte_end":14394,"line_start":155,"line_end":155,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":90},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14621,"byte_end":14626,"line_start":160,"line_end":160,"column_start":10,"column_end":15},"name":"u37be","qualname":"::types::u37be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 37-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 37-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14418,"byte_end":14515,"line_start":158,"line_end":158,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14516,"byte_end":14611,"line_start":159,"line_end":159,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":91},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14838,"byte_end":14843,"line_start":164,"line_end":164,"column_start":10,"column_end":15},"name":"u38be","qualname":"::types::u38be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 38-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 38-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14635,"byte_end":14732,"line_start":162,"line_end":162,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14733,"byte_end":14828,"line_start":163,"line_end":163,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":92},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15055,"byte_end":15060,"line_start":168,"line_end":168,"column_start":10,"column_end":15},"name":"u39be","qualname":"::types::u39be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 39-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 39-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14852,"byte_end":14949,"line_start":166,"line_end":166,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":14950,"byte_end":15045,"line_start":167,"line_end":167,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15272,"byte_end":15277,"line_start":172,"line_end":172,"column_start":10,"column_end":15},"name":"u40be","qualname":"::types::u40be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 40-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 40-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15069,"byte_end":15166,"line_start":170,"line_end":170,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15167,"byte_end":15262,"line_start":171,"line_end":171,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":94},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15489,"byte_end":15494,"line_start":176,"line_end":176,"column_start":10,"column_end":15},"name":"u41be","qualname":"::types::u41be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 41-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 41-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15286,"byte_end":15383,"line_start":174,"line_end":174,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15384,"byte_end":15479,"line_start":175,"line_end":175,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":95},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15706,"byte_end":15711,"line_start":180,"line_end":180,"column_start":10,"column_end":15},"name":"u42be","qualname":"::types::u42be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 42-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 42-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15503,"byte_end":15600,"line_start":178,"line_end":178,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15601,"byte_end":15696,"line_start":179,"line_end":179,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15923,"byte_end":15928,"line_start":184,"line_end":184,"column_start":10,"column_end":15},"name":"u43be","qualname":"::types::u43be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 43-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 43-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15720,"byte_end":15817,"line_start":182,"line_end":182,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15818,"byte_end":15913,"line_start":183,"line_end":183,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16140,"byte_end":16145,"line_start":188,"line_end":188,"column_start":10,"column_end":15},"name":"u44be","qualname":"::types::u44be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 44-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 44-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":15937,"byte_end":16034,"line_start":186,"line_end":186,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16035,"byte_end":16130,"line_start":187,"line_end":187,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":98},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16357,"byte_end":16362,"line_start":192,"line_end":192,"column_start":10,"column_end":15},"name":"u45be","qualname":"::types::u45be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 45-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 45-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16154,"byte_end":16251,"line_start":190,"line_end":190,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16252,"byte_end":16347,"line_start":191,"line_end":191,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16574,"byte_end":16579,"line_start":196,"line_end":196,"column_start":10,"column_end":15},"name":"u46be","qualname":"::types::u46be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 46-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 46-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16371,"byte_end":16468,"line_start":194,"line_end":194,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16469,"byte_end":16564,"line_start":195,"line_end":195,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":100},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16791,"byte_end":16796,"line_start":200,"line_end":200,"column_start":10,"column_end":15},"name":"u47be","qualname":"::types::u47be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 47-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 47-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16588,"byte_end":16685,"line_start":198,"line_end":198,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16686,"byte_end":16781,"line_start":199,"line_end":199,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":101},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17008,"byte_end":17013,"line_start":204,"line_end":204,"column_start":10,"column_end":15},"name":"u48be","qualname":"::types::u48be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 48-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 48-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16805,"byte_end":16902,"line_start":202,"line_end":202,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":16903,"byte_end":16998,"line_start":203,"line_end":203,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":102},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17225,"byte_end":17230,"line_start":208,"line_end":208,"column_start":10,"column_end":15},"name":"u49be","qualname":"::types::u49be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 49-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 49-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17022,"byte_end":17119,"line_start":206,"line_end":206,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17120,"byte_end":17215,"line_start":207,"line_end":207,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":103},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17442,"byte_end":17447,"line_start":212,"line_end":212,"column_start":10,"column_end":15},"name":"u50be","qualname":"::types::u50be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 50-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 50-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17239,"byte_end":17336,"line_start":210,"line_end":210,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17337,"byte_end":17432,"line_start":211,"line_end":211,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":104},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17659,"byte_end":17664,"line_start":216,"line_end":216,"column_start":10,"column_end":15},"name":"u51be","qualname":"::types::u51be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 51-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 51-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17456,"byte_end":17553,"line_start":214,"line_end":214,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17554,"byte_end":17649,"line_start":215,"line_end":215,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":105},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17876,"byte_end":17881,"line_start":220,"line_end":220,"column_start":10,"column_end":15},"name":"u52be","qualname":"::types::u52be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 52-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 52-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17673,"byte_end":17770,"line_start":218,"line_end":218,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17771,"byte_end":17866,"line_start":219,"line_end":219,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":106},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18093,"byte_end":18098,"line_start":224,"line_end":224,"column_start":10,"column_end":15},"name":"u53be","qualname":"::types::u53be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 53-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 53-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17890,"byte_end":17987,"line_start":222,"line_end":222,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":17988,"byte_end":18083,"line_start":223,"line_end":223,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":107},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18310,"byte_end":18315,"line_start":228,"line_end":228,"column_start":10,"column_end":15},"name":"u54be","qualname":"::types::u54be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 54-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 54-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18107,"byte_end":18204,"line_start":226,"line_end":226,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18205,"byte_end":18300,"line_start":227,"line_end":227,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":108},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18527,"byte_end":18532,"line_start":232,"line_end":232,"column_start":10,"column_end":15},"name":"u55be","qualname":"::types::u55be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 55-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 55-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18324,"byte_end":18421,"line_start":230,"line_end":230,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18422,"byte_end":18517,"line_start":231,"line_end":231,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":109},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18744,"byte_end":18749,"line_start":236,"line_end":236,"column_start":10,"column_end":15},"name":"u56be","qualname":"::types::u56be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 56-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 56-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18541,"byte_end":18638,"line_start":234,"line_end":234,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18639,"byte_end":18734,"line_start":235,"line_end":235,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":110},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18961,"byte_end":18966,"line_start":240,"line_end":240,"column_start":10,"column_end":15},"name":"u57be","qualname":"::types::u57be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 57-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 57-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18758,"byte_end":18855,"line_start":238,"line_end":238,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18856,"byte_end":18951,"line_start":239,"line_end":239,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":111},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19178,"byte_end":19183,"line_start":244,"line_end":244,"column_start":10,"column_end":15},"name":"u58be","qualname":"::types::u58be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 58-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 58-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":18975,"byte_end":19072,"line_start":242,"line_end":242,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19073,"byte_end":19168,"line_start":243,"line_end":243,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":112},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19395,"byte_end":19400,"line_start":248,"line_end":248,"column_start":10,"column_end":15},"name":"u59be","qualname":"::types::u59be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 59-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 59-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19192,"byte_end":19289,"line_start":246,"line_end":246,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19290,"byte_end":19385,"line_start":247,"line_end":247,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":113},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19612,"byte_end":19617,"line_start":252,"line_end":252,"column_start":10,"column_end":15},"name":"u60be","qualname":"::types::u60be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 60-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 60-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19409,"byte_end":19506,"line_start":250,"line_end":250,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19507,"byte_end":19602,"line_start":251,"line_end":251,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":114},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19829,"byte_end":19834,"line_start":256,"line_end":256,"column_start":10,"column_end":15},"name":"u61be","qualname":"::types::u61be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 61-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 61-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19626,"byte_end":19723,"line_start":254,"line_end":254,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19724,"byte_end":19819,"line_start":255,"line_end":255,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":115},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20046,"byte_end":20051,"line_start":260,"line_end":260,"column_start":10,"column_end":15},"name":"u62be","qualname":"::types::u62be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 62-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 62-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19843,"byte_end":19940,"line_start":258,"line_end":258,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":19941,"byte_end":20036,"line_start":259,"line_end":259,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":116},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20263,"byte_end":20268,"line_start":264,"line_end":264,"column_start":10,"column_end":15},"name":"u63be","qualname":"::types::u63be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 63-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 63-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20060,"byte_end":20157,"line_start":262,"line_end":262,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20158,"byte_end":20253,"line_start":263,"line_end":263,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":117},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20480,"byte_end":20485,"line_start":268,"line_end":268,"column_start":10,"column_end":15},"name":"u64be","qualname":"::types::u64be","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 64-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as big-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 64-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20277,"byte_end":20374,"line_start":266,"line_end":266,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as big-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20375,"byte_end":20470,"line_start":267,"line_end":267,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":118},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20699,"byte_end":20703,"line_start":272,"line_end":272,"column_start":10,"column_end":14},"name":"u9le","qualname":"::types::u9le","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 9-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 9-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20494,"byte_end":20590,"line_start":270,"line_end":270,"column_start":1,"column_end":97}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20591,"byte_end":20689,"line_start":271,"line_end":271,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":119},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20918,"byte_end":20923,"line_start":276,"line_end":276,"column_start":10,"column_end":15},"name":"u10le","qualname":"::types::u10le","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 10-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 10-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20712,"byte_end":20809,"line_start":274,"line_end":274,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20810,"byte_end":20908,"line_start":275,"line_end":275,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":120},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21138,"byte_end":21143,"line_start":280,"line_end":280,"column_start":10,"column_end":15},"name":"u11le","qualname":"::types::u11le","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 11-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 11-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":20932,"byte_end":21029,"line_start":278,"line_end":278,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21030,"byte_end":21128,"line_start":279,"line_end":279,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":121},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21358,"byte_end":21363,"line_start":284,"line_end":284,"column_start":10,"column_end":15},"name":"u12le","qualname":"::types::u12le","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 12-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 12-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21152,"byte_end":21249,"line_start":282,"line_end":282,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21250,"byte_end":21348,"line_start":283,"line_end":283,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":122},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21578,"byte_end":21583,"line_start":288,"line_end":288,"column_start":10,"column_end":15},"name":"u13le","qualname":"::types::u13le","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 13-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 13-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21372,"byte_end":21469,"line_start":286,"line_end":286,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21470,"byte_end":21568,"line_start":287,"line_end":287,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":123},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21798,"byte_end":21803,"line_start":292,"line_end":292,"column_start":10,"column_end":15},"name":"u14le","qualname":"::types::u14le","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 14-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 14-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21592,"byte_end":21689,"line_start":290,"line_end":290,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21690,"byte_end":21788,"line_start":291,"line_end":291,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":124},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22018,"byte_end":22023,"line_start":296,"line_end":296,"column_start":10,"column_end":15},"name":"u15le","qualname":"::types::u15le","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 15-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 15-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21812,"byte_end":21909,"line_start":294,"line_end":294,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":21910,"byte_end":22008,"line_start":295,"line_end":295,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":125},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22238,"byte_end":22243,"line_start":300,"line_end":300,"column_start":10,"column_end":15},"name":"u16le","qualname":"::types::u16le","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 16-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 16-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22032,"byte_end":22129,"line_start":298,"line_end":298,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22130,"byte_end":22228,"line_start":299,"line_end":299,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":126},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22458,"byte_end":22463,"line_start":304,"line_end":304,"column_start":10,"column_end":15},"name":"u17le","qualname":"::types::u17le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 17-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 17-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22252,"byte_end":22349,"line_start":302,"line_end":302,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22350,"byte_end":22448,"line_start":303,"line_end":303,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":127},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22678,"byte_end":22683,"line_start":308,"line_end":308,"column_start":10,"column_end":15},"name":"u18le","qualname":"::types::u18le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 18-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 18-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22472,"byte_end":22569,"line_start":306,"line_end":306,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22570,"byte_end":22668,"line_start":307,"line_end":307,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":128},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22898,"byte_end":22903,"line_start":312,"line_end":312,"column_start":10,"column_end":15},"name":"u19le","qualname":"::types::u19le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 19-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 19-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22692,"byte_end":22789,"line_start":310,"line_end":310,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22790,"byte_end":22888,"line_start":311,"line_end":311,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23118,"byte_end":23123,"line_start":316,"line_end":316,"column_start":10,"column_end":15},"name":"u20le","qualname":"::types::u20le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 20-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 20-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":22912,"byte_end":23009,"line_start":314,"line_end":314,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23010,"byte_end":23108,"line_start":315,"line_end":315,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":130},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23338,"byte_end":23343,"line_start":320,"line_end":320,"column_start":10,"column_end":15},"name":"u21le","qualname":"::types::u21le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 21-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 21-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23132,"byte_end":23229,"line_start":318,"line_end":318,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23230,"byte_end":23328,"line_start":319,"line_end":319,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":131},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23558,"byte_end":23563,"line_start":324,"line_end":324,"column_start":10,"column_end":15},"name":"u22le","qualname":"::types::u22le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 22-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 22-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23352,"byte_end":23449,"line_start":322,"line_end":322,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23450,"byte_end":23548,"line_start":323,"line_end":323,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23778,"byte_end":23783,"line_start":328,"line_end":328,"column_start":10,"column_end":15},"name":"u23le","qualname":"::types::u23le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 23-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 23-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23572,"byte_end":23669,"line_start":326,"line_end":326,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23670,"byte_end":23768,"line_start":327,"line_end":327,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":133},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23998,"byte_end":24003,"line_start":332,"line_end":332,"column_start":10,"column_end":15},"name":"u24le","qualname":"::types::u24le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 24-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 24-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23792,"byte_end":23889,"line_start":330,"line_end":330,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":23890,"byte_end":23988,"line_start":331,"line_end":331,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":134},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24218,"byte_end":24223,"line_start":336,"line_end":336,"column_start":10,"column_end":15},"name":"u25le","qualname":"::types::u25le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 25-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 25-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24012,"byte_end":24109,"line_start":334,"line_end":334,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24110,"byte_end":24208,"line_start":335,"line_end":335,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":135},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24438,"byte_end":24443,"line_start":340,"line_end":340,"column_start":10,"column_end":15},"name":"u26le","qualname":"::types::u26le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 26-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 26-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24232,"byte_end":24329,"line_start":338,"line_end":338,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24330,"byte_end":24428,"line_start":339,"line_end":339,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":136},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24658,"byte_end":24663,"line_start":344,"line_end":344,"column_start":10,"column_end":15},"name":"u27le","qualname":"::types::u27le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 27-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 27-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24452,"byte_end":24549,"line_start":342,"line_end":342,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24550,"byte_end":24648,"line_start":343,"line_end":343,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":137},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24878,"byte_end":24883,"line_start":348,"line_end":348,"column_start":10,"column_end":15},"name":"u28le","qualname":"::types::u28le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 28-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 28-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24672,"byte_end":24769,"line_start":346,"line_end":346,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24770,"byte_end":24868,"line_start":347,"line_end":347,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":138},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25098,"byte_end":25103,"line_start":352,"line_end":352,"column_start":10,"column_end":15},"name":"u29le","qualname":"::types::u29le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 29-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 29-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24892,"byte_end":24989,"line_start":350,"line_end":350,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":24990,"byte_end":25088,"line_start":351,"line_end":351,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":139},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25318,"byte_end":25323,"line_start":356,"line_end":356,"column_start":10,"column_end":15},"name":"u30le","qualname":"::types::u30le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 30-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 30-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25112,"byte_end":25209,"line_start":354,"line_end":354,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25210,"byte_end":25308,"line_start":355,"line_end":355,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":140},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25538,"byte_end":25543,"line_start":360,"line_end":360,"column_start":10,"column_end":15},"name":"u31le","qualname":"::types::u31le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 31-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 31-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25332,"byte_end":25429,"line_start":358,"line_end":358,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25430,"byte_end":25528,"line_start":359,"line_end":359,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":141},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25758,"byte_end":25763,"line_start":364,"line_end":364,"column_start":10,"column_end":15},"name":"u32le","qualname":"::types::u32le","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 32-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 32-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25552,"byte_end":25649,"line_start":362,"line_end":362,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25650,"byte_end":25748,"line_start":363,"line_end":363,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":142},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25978,"byte_end":25983,"line_start":368,"line_end":368,"column_start":10,"column_end":15},"name":"u33le","qualname":"::types::u33le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 33-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 33-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25772,"byte_end":25869,"line_start":366,"line_end":366,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25870,"byte_end":25968,"line_start":367,"line_end":367,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":143},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26198,"byte_end":26203,"line_start":372,"line_end":372,"column_start":10,"column_end":15},"name":"u34le","qualname":"::types::u34le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 34-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 34-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":25992,"byte_end":26089,"line_start":370,"line_end":370,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26090,"byte_end":26188,"line_start":371,"line_end":371,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":144},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26418,"byte_end":26423,"line_start":376,"line_end":376,"column_start":10,"column_end":15},"name":"u35le","qualname":"::types::u35le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 35-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 35-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26212,"byte_end":26309,"line_start":374,"line_end":374,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26310,"byte_end":26408,"line_start":375,"line_end":375,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":145},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26638,"byte_end":26643,"line_start":380,"line_end":380,"column_start":10,"column_end":15},"name":"u36le","qualname":"::types::u36le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 36-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 36-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26432,"byte_end":26529,"line_start":378,"line_end":378,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26530,"byte_end":26628,"line_start":379,"line_end":379,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":146},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26858,"byte_end":26863,"line_start":384,"line_end":384,"column_start":10,"column_end":15},"name":"u37le","qualname":"::types::u37le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 37-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 37-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26652,"byte_end":26749,"line_start":382,"line_end":382,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26750,"byte_end":26848,"line_start":383,"line_end":383,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":147},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27078,"byte_end":27083,"line_start":388,"line_end":388,"column_start":10,"column_end":15},"name":"u38le","qualname":"::types::u38le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 38-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 38-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26872,"byte_end":26969,"line_start":386,"line_end":386,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":26970,"byte_end":27068,"line_start":387,"line_end":387,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":148},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27298,"byte_end":27303,"line_start":392,"line_end":392,"column_start":10,"column_end":15},"name":"u39le","qualname":"::types::u39le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 39-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 39-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27092,"byte_end":27189,"line_start":390,"line_end":390,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27190,"byte_end":27288,"line_start":391,"line_end":391,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":149},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27518,"byte_end":27523,"line_start":396,"line_end":396,"column_start":10,"column_end":15},"name":"u40le","qualname":"::types::u40le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 40-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 40-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27312,"byte_end":27409,"line_start":394,"line_end":394,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27410,"byte_end":27508,"line_start":395,"line_end":395,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":150},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27738,"byte_end":27743,"line_start":400,"line_end":400,"column_start":10,"column_end":15},"name":"u41le","qualname":"::types::u41le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 41-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 41-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27532,"byte_end":27629,"line_start":398,"line_end":398,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27630,"byte_end":27728,"line_start":399,"line_end":399,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":151},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27958,"byte_end":27963,"line_start":404,"line_end":404,"column_start":10,"column_end":15},"name":"u42le","qualname":"::types::u42le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 42-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 42-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27752,"byte_end":27849,"line_start":402,"line_end":402,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27850,"byte_end":27948,"line_start":403,"line_end":403,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":152},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28178,"byte_end":28183,"line_start":408,"line_end":408,"column_start":10,"column_end":15},"name":"u43le","qualname":"::types::u43le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 43-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 43-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":27972,"byte_end":28069,"line_start":406,"line_end":406,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28070,"byte_end":28168,"line_start":407,"line_end":407,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":153},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28398,"byte_end":28403,"line_start":412,"line_end":412,"column_start":10,"column_end":15},"name":"u44le","qualname":"::types::u44le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 44-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 44-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28192,"byte_end":28289,"line_start":410,"line_end":410,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28290,"byte_end":28388,"line_start":411,"line_end":411,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":154},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28618,"byte_end":28623,"line_start":416,"line_end":416,"column_start":10,"column_end":15},"name":"u45le","qualname":"::types::u45le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 45-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 45-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28412,"byte_end":28509,"line_start":414,"line_end":414,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28510,"byte_end":28608,"line_start":415,"line_end":415,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":155},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28838,"byte_end":28843,"line_start":420,"line_end":420,"column_start":10,"column_end":15},"name":"u46le","qualname":"::types::u46le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 46-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 46-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28632,"byte_end":28729,"line_start":418,"line_end":418,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28730,"byte_end":28828,"line_start":419,"line_end":419,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":156},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29058,"byte_end":29063,"line_start":424,"line_end":424,"column_start":10,"column_end":15},"name":"u47le","qualname":"::types::u47le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 47-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 47-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28852,"byte_end":28949,"line_start":422,"line_end":422,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":28950,"byte_end":29048,"line_start":423,"line_end":423,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":157},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29278,"byte_end":29283,"line_start":428,"line_end":428,"column_start":10,"column_end":15},"name":"u48le","qualname":"::types::u48le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 48-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 48-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29072,"byte_end":29169,"line_start":426,"line_end":426,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29170,"byte_end":29268,"line_start":427,"line_end":427,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":158},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29498,"byte_end":29503,"line_start":432,"line_end":432,"column_start":10,"column_end":15},"name":"u49le","qualname":"::types::u49le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 49-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 49-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29292,"byte_end":29389,"line_start":430,"line_end":430,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29390,"byte_end":29488,"line_start":431,"line_end":431,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":159},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29718,"byte_end":29723,"line_start":436,"line_end":436,"column_start":10,"column_end":15},"name":"u50le","qualname":"::types::u50le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 50-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 50-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29512,"byte_end":29609,"line_start":434,"line_end":434,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29610,"byte_end":29708,"line_start":435,"line_end":435,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":160},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29938,"byte_end":29943,"line_start":440,"line_end":440,"column_start":10,"column_end":15},"name":"u51le","qualname":"::types::u51le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 51-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 51-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29732,"byte_end":29829,"line_start":438,"line_end":438,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29830,"byte_end":29928,"line_start":439,"line_end":439,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":161},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30158,"byte_end":30163,"line_start":444,"line_end":444,"column_start":10,"column_end":15},"name":"u52le","qualname":"::types::u52le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 52-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 52-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":29952,"byte_end":30049,"line_start":442,"line_end":442,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30050,"byte_end":30148,"line_start":443,"line_end":443,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":162},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30378,"byte_end":30383,"line_start":448,"line_end":448,"column_start":10,"column_end":15},"name":"u53le","qualname":"::types::u53le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 53-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 53-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30172,"byte_end":30269,"line_start":446,"line_end":446,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30270,"byte_end":30368,"line_start":447,"line_end":447,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":163},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30598,"byte_end":30603,"line_start":452,"line_end":452,"column_start":10,"column_end":15},"name":"u54le","qualname":"::types::u54le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 54-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 54-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30392,"byte_end":30489,"line_start":450,"line_end":450,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30490,"byte_end":30588,"line_start":451,"line_end":451,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":164},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30818,"byte_end":30823,"line_start":456,"line_end":456,"column_start":10,"column_end":15},"name":"u55le","qualname":"::types::u55le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 55-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 55-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30612,"byte_end":30709,"line_start":454,"line_end":454,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30710,"byte_end":30808,"line_start":455,"line_end":455,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":165},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31038,"byte_end":31043,"line_start":460,"line_end":460,"column_start":10,"column_end":15},"name":"u56le","qualname":"::types::u56le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 56-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 56-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30832,"byte_end":30929,"line_start":458,"line_end":458,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":30930,"byte_end":31028,"line_start":459,"line_end":459,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":166},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31258,"byte_end":31263,"line_start":464,"line_end":464,"column_start":10,"column_end":15},"name":"u57le","qualname":"::types::u57le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 57-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 57-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31052,"byte_end":31149,"line_start":462,"line_end":462,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31150,"byte_end":31248,"line_start":463,"line_end":463,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":167},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31478,"byte_end":31483,"line_start":468,"line_end":468,"column_start":10,"column_end":15},"name":"u58le","qualname":"::types::u58le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 58-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 58-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31272,"byte_end":31369,"line_start":466,"line_end":466,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31370,"byte_end":31468,"line_start":467,"line_end":467,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":168},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31698,"byte_end":31703,"line_start":472,"line_end":472,"column_start":10,"column_end":15},"name":"u59le","qualname":"::types::u59le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 59-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 59-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31492,"byte_end":31589,"line_start":470,"line_end":470,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31590,"byte_end":31688,"line_start":471,"line_end":471,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":169},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31918,"byte_end":31923,"line_start":476,"line_end":476,"column_start":10,"column_end":15},"name":"u60le","qualname":"::types::u60le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 60-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 60-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31712,"byte_end":31809,"line_start":474,"line_end":474,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31810,"byte_end":31908,"line_start":475,"line_end":475,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":170},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32138,"byte_end":32143,"line_start":480,"line_end":480,"column_start":10,"column_end":15},"name":"u61le","qualname":"::types::u61le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 61-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 61-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":31932,"byte_end":32029,"line_start":478,"line_end":478,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32030,"byte_end":32128,"line_start":479,"line_end":479,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":171},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32358,"byte_end":32363,"line_start":484,"line_end":484,"column_start":10,"column_end":15},"name":"u62le","qualname":"::types::u62le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 62-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 62-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32152,"byte_end":32249,"line_start":482,"line_end":482,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32250,"byte_end":32348,"line_start":483,"line_end":483,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":172},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32578,"byte_end":32583,"line_start":488,"line_end":488,"column_start":10,"column_end":15},"name":"u63le","qualname":"::types::u63le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 63-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 63-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32372,"byte_end":32469,"line_start":486,"line_end":486,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32470,"byte_end":32568,"line_start":487,"line_end":487,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":173},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32798,"byte_end":32803,"line_start":492,"line_end":492,"column_start":10,"column_end":15},"name":"u64le","qualname":"::types::u64le","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 64-bit integer. libpnet #[packet]-derived structs using this type will\n hold it in memory as little-endian, but accessors/mutators will return/take host-order values.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 64-bit integer. libpnet #[packet]-derived structs using this type will","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32592,"byte_end":32689,"line_start":490,"line_end":490,"column_start":1,"column_end":98}},{"value":"/ hold it in memory as little-endian, but accessors/mutators will return/take host-order values.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32690,"byte_end":32788,"line_start":491,"line_end":491,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":174},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32882,"byte_end":32886,"line_start":495,"line_end":495,"column_start":10,"column_end":14},"name":"u9he","qualname":"::types::u9he","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 9-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 9-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32812,"byte_end":32872,"line_start":494,"line_end":494,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":175},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32966,"byte_end":32971,"line_start":498,"line_end":498,"column_start":10,"column_end":15},"name":"u10he","qualname":"::types::u10he","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 10-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 10-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32895,"byte_end":32956,"line_start":497,"line_end":497,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":176},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33051,"byte_end":33056,"line_start":501,"line_end":501,"column_start":10,"column_end":15},"name":"u11he","qualname":"::types::u11he","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 11-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 11-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":32980,"byte_end":33041,"line_start":500,"line_end":500,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":177},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33136,"byte_end":33141,"line_start":504,"line_end":504,"column_start":10,"column_end":15},"name":"u12he","qualname":"::types::u12he","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 12-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 12-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33065,"byte_end":33126,"line_start":503,"line_end":503,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":178},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33221,"byte_end":33226,"line_start":507,"line_end":507,"column_start":10,"column_end":15},"name":"u13he","qualname":"::types::u13he","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 13-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 13-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33150,"byte_end":33211,"line_start":506,"line_end":506,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":179},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33306,"byte_end":33311,"line_start":510,"line_end":510,"column_start":10,"column_end":15},"name":"u14he","qualname":"::types::u14he","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 14-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 14-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33235,"byte_end":33296,"line_start":509,"line_end":509,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":180},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33391,"byte_end":33396,"line_start":513,"line_end":513,"column_start":10,"column_end":15},"name":"u15he","qualname":"::types::u15he","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 15-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 15-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33320,"byte_end":33381,"line_start":512,"line_end":512,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":181},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33476,"byte_end":33481,"line_start":516,"line_end":516,"column_start":10,"column_end":15},"name":"u16he","qualname":"::types::u16he","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 16-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 16-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33405,"byte_end":33466,"line_start":515,"line_end":515,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":182},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33561,"byte_end":33566,"line_start":519,"line_end":519,"column_start":10,"column_end":15},"name":"u17he","qualname":"::types::u17he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 17-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 17-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33490,"byte_end":33551,"line_start":518,"line_end":518,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":183},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33646,"byte_end":33651,"line_start":522,"line_end":522,"column_start":10,"column_end":15},"name":"u18he","qualname":"::types::u18he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 18-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 18-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33575,"byte_end":33636,"line_start":521,"line_end":521,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":184},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33731,"byte_end":33736,"line_start":525,"line_end":525,"column_start":10,"column_end":15},"name":"u19he","qualname":"::types::u19he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 19-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 19-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33660,"byte_end":33721,"line_start":524,"line_end":524,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":185},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33816,"byte_end":33821,"line_start":528,"line_end":528,"column_start":10,"column_end":15},"name":"u20he","qualname":"::types::u20he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 20-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 20-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33745,"byte_end":33806,"line_start":527,"line_end":527,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":186},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33901,"byte_end":33906,"line_start":531,"line_end":531,"column_start":10,"column_end":15},"name":"u21he","qualname":"::types::u21he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 21-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 21-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33830,"byte_end":33891,"line_start":530,"line_end":530,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":187},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33986,"byte_end":33991,"line_start":534,"line_end":534,"column_start":10,"column_end":15},"name":"u22he","qualname":"::types::u22he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 22-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 22-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":33915,"byte_end":33976,"line_start":533,"line_end":533,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":188},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34071,"byte_end":34076,"line_start":537,"line_end":537,"column_start":10,"column_end":15},"name":"u23he","qualname":"::types::u23he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 23-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 23-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34000,"byte_end":34061,"line_start":536,"line_end":536,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":189},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34156,"byte_end":34161,"line_start":540,"line_end":540,"column_start":10,"column_end":15},"name":"u24he","qualname":"::types::u24he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 24-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 24-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34085,"byte_end":34146,"line_start":539,"line_end":539,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":190},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34241,"byte_end":34246,"line_start":543,"line_end":543,"column_start":10,"column_end":15},"name":"u25he","qualname":"::types::u25he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 25-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 25-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34170,"byte_end":34231,"line_start":542,"line_end":542,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":191},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34326,"byte_end":34331,"line_start":546,"line_end":546,"column_start":10,"column_end":15},"name":"u26he","qualname":"::types::u26he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 26-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 26-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34255,"byte_end":34316,"line_start":545,"line_end":545,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":192},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34411,"byte_end":34416,"line_start":549,"line_end":549,"column_start":10,"column_end":15},"name":"u27he","qualname":"::types::u27he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 27-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 27-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34340,"byte_end":34401,"line_start":548,"line_end":548,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":193},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34496,"byte_end":34501,"line_start":552,"line_end":552,"column_start":10,"column_end":15},"name":"u28he","qualname":"::types::u28he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 28-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 28-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34425,"byte_end":34486,"line_start":551,"line_end":551,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":194},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34581,"byte_end":34586,"line_start":555,"line_end":555,"column_start":10,"column_end":15},"name":"u29he","qualname":"::types::u29he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 29-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 29-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34510,"byte_end":34571,"line_start":554,"line_end":554,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":195},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34666,"byte_end":34671,"line_start":558,"line_end":558,"column_start":10,"column_end":15},"name":"u30he","qualname":"::types::u30he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 30-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 30-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34595,"byte_end":34656,"line_start":557,"line_end":557,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":196},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34751,"byte_end":34756,"line_start":561,"line_end":561,"column_start":10,"column_end":15},"name":"u31he","qualname":"::types::u31he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 31-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 31-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34680,"byte_end":34741,"line_start":560,"line_end":560,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":197},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34836,"byte_end":34841,"line_start":564,"line_end":564,"column_start":10,"column_end":15},"name":"u32he","qualname":"::types::u32he","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 32-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 32-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34765,"byte_end":34826,"line_start":563,"line_end":563,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":198},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34921,"byte_end":34926,"line_start":567,"line_end":567,"column_start":10,"column_end":15},"name":"u33he","qualname":"::types::u33he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 33-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 33-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34850,"byte_end":34911,"line_start":566,"line_end":566,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":199},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35006,"byte_end":35011,"line_start":570,"line_end":570,"column_start":10,"column_end":15},"name":"u34he","qualname":"::types::u34he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 34-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 34-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":34935,"byte_end":34996,"line_start":569,"line_end":569,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":200},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35091,"byte_end":35096,"line_start":573,"line_end":573,"column_start":10,"column_end":15},"name":"u35he","qualname":"::types::u35he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 35-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 35-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35020,"byte_end":35081,"line_start":572,"line_end":572,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":201},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35176,"byte_end":35181,"line_start":576,"line_end":576,"column_start":10,"column_end":15},"name":"u36he","qualname":"::types::u36he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 36-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 36-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35105,"byte_end":35166,"line_start":575,"line_end":575,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":202},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35261,"byte_end":35266,"line_start":579,"line_end":579,"column_start":10,"column_end":15},"name":"u37he","qualname":"::types::u37he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 37-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 37-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35190,"byte_end":35251,"line_start":578,"line_end":578,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":203},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35346,"byte_end":35351,"line_start":582,"line_end":582,"column_start":10,"column_end":15},"name":"u38he","qualname":"::types::u38he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 38-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 38-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35275,"byte_end":35336,"line_start":581,"line_end":581,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":204},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35431,"byte_end":35436,"line_start":585,"line_end":585,"column_start":10,"column_end":15},"name":"u39he","qualname":"::types::u39he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 39-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 39-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35360,"byte_end":35421,"line_start":584,"line_end":584,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":205},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35516,"byte_end":35521,"line_start":588,"line_end":588,"column_start":10,"column_end":15},"name":"u40he","qualname":"::types::u40he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 40-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 40-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35445,"byte_end":35506,"line_start":587,"line_end":587,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":206},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35601,"byte_end":35606,"line_start":591,"line_end":591,"column_start":10,"column_end":15},"name":"u41he","qualname":"::types::u41he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 41-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 41-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35530,"byte_end":35591,"line_start":590,"line_end":590,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":207},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35686,"byte_end":35691,"line_start":594,"line_end":594,"column_start":10,"column_end":15},"name":"u42he","qualname":"::types::u42he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 42-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 42-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35615,"byte_end":35676,"line_start":593,"line_end":593,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":208},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35771,"byte_end":35776,"line_start":597,"line_end":597,"column_start":10,"column_end":15},"name":"u43he","qualname":"::types::u43he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 43-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 43-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35700,"byte_end":35761,"line_start":596,"line_end":596,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":209},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35856,"byte_end":35861,"line_start":600,"line_end":600,"column_start":10,"column_end":15},"name":"u44he","qualname":"::types::u44he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 44-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 44-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35785,"byte_end":35846,"line_start":599,"line_end":599,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":210},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35941,"byte_end":35946,"line_start":603,"line_end":603,"column_start":10,"column_end":15},"name":"u45he","qualname":"::types::u45he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 45-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 45-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35870,"byte_end":35931,"line_start":602,"line_end":602,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":211},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36026,"byte_end":36031,"line_start":606,"line_end":606,"column_start":10,"column_end":15},"name":"u46he","qualname":"::types::u46he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 46-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 46-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":35955,"byte_end":36016,"line_start":605,"line_end":605,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":212},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36111,"byte_end":36116,"line_start":609,"line_end":609,"column_start":10,"column_end":15},"name":"u47he","qualname":"::types::u47he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 47-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 47-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36040,"byte_end":36101,"line_start":608,"line_end":608,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":213},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36196,"byte_end":36201,"line_start":612,"line_end":612,"column_start":10,"column_end":15},"name":"u48he","qualname":"::types::u48he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 48-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 48-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36125,"byte_end":36186,"line_start":611,"line_end":611,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":214},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36281,"byte_end":36286,"line_start":615,"line_end":615,"column_start":10,"column_end":15},"name":"u49he","qualname":"::types::u49he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 49-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 49-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36210,"byte_end":36271,"line_start":614,"line_end":614,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":215},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36366,"byte_end":36371,"line_start":618,"line_end":618,"column_start":10,"column_end":15},"name":"u50he","qualname":"::types::u50he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 50-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 50-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36295,"byte_end":36356,"line_start":617,"line_end":617,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":216},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36451,"byte_end":36456,"line_start":621,"line_end":621,"column_start":10,"column_end":15},"name":"u51he","qualname":"::types::u51he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 51-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 51-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36380,"byte_end":36441,"line_start":620,"line_end":620,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":217},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36536,"byte_end":36541,"line_start":624,"line_end":624,"column_start":10,"column_end":15},"name":"u52he","qualname":"::types::u52he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 52-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 52-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36465,"byte_end":36526,"line_start":623,"line_end":623,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":218},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36621,"byte_end":36626,"line_start":627,"line_end":627,"column_start":10,"column_end":15},"name":"u53he","qualname":"::types::u53he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 53-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 53-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36550,"byte_end":36611,"line_start":626,"line_end":626,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":219},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36706,"byte_end":36711,"line_start":630,"line_end":630,"column_start":10,"column_end":15},"name":"u54he","qualname":"::types::u54he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 54-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 54-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36635,"byte_end":36696,"line_start":629,"line_end":629,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":220},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36791,"byte_end":36796,"line_start":633,"line_end":633,"column_start":10,"column_end":15},"name":"u55he","qualname":"::types::u55he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 55-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 55-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36720,"byte_end":36781,"line_start":632,"line_end":632,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":221},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36876,"byte_end":36881,"line_start":636,"line_end":636,"column_start":10,"column_end":15},"name":"u56he","qualname":"::types::u56he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 56-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 56-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36805,"byte_end":36866,"line_start":635,"line_end":635,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":222},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36961,"byte_end":36966,"line_start":639,"line_end":639,"column_start":10,"column_end":15},"name":"u57he","qualname":"::types::u57he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 57-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 57-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36890,"byte_end":36951,"line_start":638,"line_end":638,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":223},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37046,"byte_end":37051,"line_start":642,"line_end":642,"column_start":10,"column_end":15},"name":"u58he","qualname":"::types::u58he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 58-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 58-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":36975,"byte_end":37036,"line_start":641,"line_end":641,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":224},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37131,"byte_end":37136,"line_start":645,"line_end":645,"column_start":10,"column_end":15},"name":"u59he","qualname":"::types::u59he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 59-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 59-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37060,"byte_end":37121,"line_start":644,"line_end":644,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":225},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37216,"byte_end":37221,"line_start":648,"line_end":648,"column_start":10,"column_end":15},"name":"u60he","qualname":"::types::u60he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 60-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 60-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37145,"byte_end":37206,"line_start":647,"line_end":647,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":226},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37301,"byte_end":37306,"line_start":651,"line_end":651,"column_start":10,"column_end":15},"name":"u61he","qualname":"::types::u61he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 61-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 61-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37230,"byte_end":37291,"line_start":650,"line_end":650,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":227},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37386,"byte_end":37391,"line_start":654,"line_end":654,"column_start":10,"column_end":15},"name":"u62he","qualname":"::types::u62he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 62-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 62-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37315,"byte_end":37376,"line_start":653,"line_end":653,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":228},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37471,"byte_end":37476,"line_start":657,"line_end":657,"column_start":10,"column_end":15},"name":"u63he","qualname":"::types::u63he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 63-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 63-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37400,"byte_end":37461,"line_start":656,"line_end":656,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":229},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37556,"byte_end":37561,"line_start":660,"line_end":660,"column_start":10,"column_end":15},"name":"u64he","qualname":"::types::u64he","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Represents an unsigned 64-bit integer in host endianness.\n","sig":null,"attributes":[{"value":"/ Represents an unsigned 64-bit integer in host endianness.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/types.rs","byte_start":37485,"byte_end":37546,"line_start":659,"line_end":659,"column_start":1,"column_end":62}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3369,"byte_end":3379,"line_start":93,"line_end":93,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4252,"byte_end":4265,"line_start":128,"line_end":128,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":5961,"byte_end":5968,"line_start":180,"line_end":180,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":6177,"byte_end":6185,"line_start":187,"line_end":187,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":6411,"byte_end":6419,"line_start":196,"line_end":196,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","byte_start":574,"byte_end":580,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/lib.rs","byte_start":590,"byte_end":595,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":54}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":1426,"byte_end":1432,"line_start":24,"line_end":24,"column_start":26,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":15},"to":{"krate":0,"index":18}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2140,"byte_end":2146,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":15},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":2495,"byte_end":2501,"line_start":57,"line_end":57,"column_start":23,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":15},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":3369,"byte_end":3379,"line_start":93,"line_end":93,"column_start":10,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":4252,"byte_end":4265,"line_start":128,"line_end":128,"column_start":10,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":5961,"byte_end":5968,"line_start":180,"line_end":180,"column_start":37,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":15,"index":42},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":6177,"byte_end":6185,"line_start":187,"line_end":187,"column_start":38,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":1,"index":6710},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_macros_support-0.26.0/src/packet.rs","byte_start":6411,"byte_end":6419,"line_start":196,"line_end":196,"column_start":38,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":6713},"to":{"krate":0,"index":42}}]}