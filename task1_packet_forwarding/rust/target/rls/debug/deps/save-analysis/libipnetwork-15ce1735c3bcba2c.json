{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0","program":"/home/pstiegele/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ipnetwork","--edition=2018","/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","-C","metadata=15ce1735c3bcba2c","-C","extra-filename=-15ce1735c3bcba2c","--out-dir","/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps","-L","dependency=/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps","--extern","serde=/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps/libserde-1d3b5750da4dc43b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pstiegele/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pstiegele/lab/task1_packet_forwarding/rust/target/rls/debug/deps/libipnetwork-15ce1735c3bcba2c.rmeta"},"prelude":{"crate_id":{"name":"ipnetwork","disambiguator":[15283980477283858081,15927310547964725862]},"crate_root":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src","external_crates":[{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","num":15,"id":{"name":"serde","disambiguator":[13445573176919416771,6792951793616445379]}}],"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":0,"byte_end":11909,"line_start":1,"line_end":371,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":361,"byte_end":375,"line_start":14,"line_end":14,"column_start":24,"column_end":38},"alias_span":null,"name":"IpNetworkError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":437,"byte_end":456,"line_start":16,"line_end":16,"column_start":23,"column_end":42},"alias_span":null,"name":"ipv4_mask_to_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":458,"byte_end":469,"line_start":16,"line_end":16,"column_start":44,"column_end":55},"alias_span":null,"name":"Ipv4Network","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":532,"byte_end":551,"line_start":18,"line_end":18,"column_start":23,"column_end":42},"alias_span":null,"name":"ipv6_mask_to_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":553,"byte_end":564,"line_start":18,"line_end":18,"column_start":44,"column_end":55},"alias_span":null,"name":"Ipv6Network","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":0,"byte_end":11909,"line_start":1,"line_end":371,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7},{"krate":0,"index":20},{"krate":0,"index":68},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":263},{"krate":0,"index":291},{"krate":0,"index":289},{"krate":0,"index":288},{"krate":0,"index":285},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":272},{"krate":0,"index":270},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":293},{"krate":0,"index":321},{"krate":0,"index":319},{"krate":0,"index":318},{"krate":0,"index":315},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":302},{"krate":0,"index":300},{"krate":0,"index":135},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":323},{"krate":0,"index":332},{"krate":0,"index":330},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":168}],"decl_id":null,"docs":" The `ipnetwork` crate provides a set of APIs to work with IP CIDRs in\n Rust.\n","sig":null,"attributes":[{"value":"! The `ipnetwork` crate provides a set of APIs to work with IP CIDRs in","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":0,"byte_end":73,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"! Rust.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":74,"byte_end":83,"line_start":2,"line_end":2,"column_start":1,"column_end":10}},{"value":"crate_type = \"lib\"","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":177,"byte_end":199,"line_start":5,"line_end":5,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":170},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/common.rs","byte_start":12092,"byte_end":12103,"line_start":6,"line_end":6,"column_start":5,"column_end":16},"name":"InvalidAddr","qualname":"::common::IpNetworkError::InvalidAddr","value":"IpNetworkError::InvalidAddr(String)","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":173},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/common.rs","byte_start":12117,"byte_end":12130,"line_start":7,"line_end":7,"column_start":5,"column_end":18},"name":"InvalidPrefix","qualname":"::common::IpNetworkError::InvalidPrefix","value":"IpNetworkError::InvalidPrefix","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":175},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/common.rs","byte_start":12136,"byte_end":12153,"line_start":8,"line_end":8,"column_start":5,"column_end":22},"name":"InvalidCidrFormat","qualname":"::common::IpNetworkError::InvalidCidrFormat","value":"IpNetworkError::InvalidCidrFormat(String)","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":169},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/common.rs","byte_start":12071,"byte_end":12085,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"IpNetworkError","qualname":"::common::IpNetworkError","value":"IpNetworkError::{InvalidAddr, InvalidPrefix, InvalidCidrFormat}","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":175}],"decl_id":null,"docs":" Represents a bunch of errors that can occur while working with a `IpNetwork`\n","sig":null,"attributes":[{"value":"/ Represents a bunch of errors that can occur while working with a `IpNetwork`","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/common.rs","byte_start":11942,"byte_end":12022,"line_start":3,"line_end":3,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":14119,"byte_end":14130,"line_start":8,"line_end":8,"column_start":12,"column_end":23},"name":"Ipv4Network","qualname":"::ipv4::Ipv4Network","value":"Ipv4Network {  }","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"decl_id":null,"docs":" Represents a network range where the IP addresses are of v4\n","sig":null,"attributes":[{"value":"/ Represents a network range where the IP addresses are of v4","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":13976,"byte_end":14039,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":14971,"byte_end":14974,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv4Network>::new","value":"fn (addr: Ipv4Addr, prefix: u8) -> Result<Ipv4Network, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Ipv4Network` from any `Ipv4Addr` and a prefix denoting the network size.","sig":null,"attributes":[{"value":"/ Constructs a new `Ipv4Network` from any `Ipv4Addr` and a prefix denoting the network size.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":14764,"byte_end":14858,"line_start":35,"line_end":35,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":14863,"byte_end":14866,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the prefix is larger than 32 this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":14871,"byte_end":14959,"line_start":37,"line_end":37,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":15392,"byte_end":15404,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"with_netmask","qualname":"<Ipv4Network>::with_netmask","value":"fn (netaddr: Ipv4Addr, netmask: Ipv4Addr) -> Result<Ipv4Network, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Ipv4Network` from a network address and a network mask.","sig":null,"attributes":[{"value":"/ Constructs a new `Ipv4Network` from a network address and a network mask.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":15206,"byte_end":15283,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":15288,"byte_end":15291,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If the netmask is not valid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":15296,"byte_end":15380,"line_start":48,"line_end":48,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":15872,"byte_end":15876,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"iter","qualname":"<Ipv4Network>::iter","value":"fn (&self) -> Ipv4NetworkIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `Ipv4Network`. Each call to `next` will return the next\n `Ipv4Addr` in the given network. `None` will be returned when there are no more\n addresses.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over `Ipv4Network`. Each call to `next` will return the next","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":15669,"byte_end":15753,"line_start":61,"line_end":61,"column_start":5,"column_end":89}},{"value":"/ `Ipv4Addr` in the given network. `None` will be returned when there are no more","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":15758,"byte_end":15841,"line_start":62,"line_end":62,"column_start":5,"column_end":88}},{"value":"/ addresses.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":15846,"byte_end":15860,"line_start":63,"line_end":63,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":16107,"byte_end":16109,"line_start":73,"line_end":73,"column_start":12,"column_end":14},"name":"ip","qualname":"<Ipv4Network>::ip","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":16167,"byte_end":16173,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Ipv4Network>::prefix","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":16295,"byte_end":16307,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"is_subnet_of","qualname":"<Ipv4Network>::is_subnet_of","value":"fn (self, other: Ipv4Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv4Network` is a subnet of the other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv4Network` is a subnet of the other.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":16220,"byte_end":16283,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":16505,"byte_end":16519,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"is_supernet_of","qualname":"<Ipv4Network>::is_supernet_of","value":"fn (self, other: Ipv4Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv4Network` is a supernet of the other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv4Network` is a supernet of the other.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":16428,"byte_end":16493,"line_start":86,"line_end":86,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":16679,"byte_end":16687,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"overlaps","qualname":"<Ipv4Network>::overlaps","value":"fn (self, other: Ipv4Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv4Network` is partly contained in other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv4Network` is partly contained in other.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":16600,"byte_end":16667,"line_start":91,"line_end":91,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17429,"byte_end":17433,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"mask","qualname":"<Ipv4Network>::mask","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the mask for this `Ipv4Network`.\n That means the `prefix` most significant bits will be 1 and the rest 0","sig":null,"attributes":[{"value":"/ Returns the mask for this `Ipv4Network`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":16904,"byte_end":16948,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ That means the `prefix` most significant bits will be 1 and the rest 0","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":16953,"byte_end":17027,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17032,"byte_end":17035,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17040,"byte_end":17054,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17059,"byte_end":17062,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17067,"byte_end":17074,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17079,"byte_end":17106,"line_start":104,"line_end":104,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17111,"byte_end":17142,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17147,"byte_end":17150,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"127.0.0.0\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17155,"byte_end":17211,"line_start":107,"line_end":107,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(net.mask(), Ipv4Addr::new(255, 255, 255, 255));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17216,"byte_end":17278,"line_start":108,"line_end":108,"column_start":5,"column_end":67}},{"value":"/ let net: Ipv4Network = \"127.0.0.0/16\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17283,"byte_end":17342,"line_start":109,"line_end":109,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net.mask(), Ipv4Addr::new(255, 255, 0, 0));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17347,"byte_end":17405,"line_start":110,"line_end":110,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17410,"byte_end":17417,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18006,"byte_end":18013,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"network","qualname":"<Ipv4Network>::network","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the network denoted by this `Ipv4Network`.\n This means the lowest possible IPv4 address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the address of the network denoted by this `Ipv4Network`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17588,"byte_end":17657,"line_start":118,"line_end":118,"column_start":5,"column_end":74}},{"value":"/ This means the lowest possible IPv4 address inside of the network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17662,"byte_end":17732,"line_start":119,"line_end":119,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17737,"byte_end":17740,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17745,"byte_end":17759,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17764,"byte_end":17767,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17772,"byte_end":17779,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17784,"byte_end":17811,"line_start":124,"line_end":124,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17816,"byte_end":17847,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17852,"byte_end":17855,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"10.1.9.32/16\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17860,"byte_end":17919,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net.network(), Ipv4Addr::new(10, 1, 0, 0));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17924,"byte_end":17982,"line_start":128,"line_end":128,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":17987,"byte_end":17994,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18577,"byte_end":18586,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Ipv4Network>::broadcast","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcasting address of this `Ipv4Network`.\n This means the highest possible IPv4 address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the broadcasting address of this `Ipv4Network`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18162,"byte_end":18221,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/ This means the highest possible IPv4 address inside of the network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18226,"byte_end":18297,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18302,"byte_end":18305,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18310,"byte_end":18324,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18329,"byte_end":18332,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18337,"byte_end":18344,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18349,"byte_end":18376,"line_start":142,"line_end":142,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18381,"byte_end":18412,"line_start":143,"line_end":143,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18417,"byte_end":18420,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"10.9.0.32/16\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18425,"byte_end":18484,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net.broadcast(), Ipv4Addr::new(10, 9, 255, 255));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18489,"byte_end":18553,"line_start":146,"line_end":146,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18558,"byte_end":18565,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19141,"byte_end":19149,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"contains","qualname":"<Ipv4Network>::contains","value":"fn (&self, ip: Ipv4Addr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a given `Ipv4Addr` is in this `Ipv4Network`","sig":null,"attributes":[{"value":"/ Checks if a given `Ipv4Addr` is in this `Ipv4Network`","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18750,"byte_end":18807,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18812,"byte_end":18815,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18820,"byte_end":18834,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18839,"byte_end":18842,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18847,"byte_end":18854,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18859,"byte_end":18886,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18891,"byte_end":18922,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18927,"byte_end":18930,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"127.0.0.0/24\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18935,"byte_end":18994,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/ assert!(net.contains(Ipv4Addr::new(127, 0, 0, 70)));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":18999,"byte_end":19055,"line_start":163,"line_end":163,"column_start":5,"column_end":61}},{"value":"/ assert!(!net.contains(Ipv4Addr::new(127, 0, 1, 70)));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19060,"byte_end":19117,"line_start":164,"line_end":164,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19122,"byte_end":19129,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19771,"byte_end":19775,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"size","qualname":"<Ipv4Network>::size","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns number of possible host addresses in this `Ipv4Network`.","sig":null,"attributes":[{"value":"/ Returns number of possible host addresses in this `Ipv4Network`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19341,"byte_end":19409,"line_start":172,"line_end":172,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19414,"byte_end":19417,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19422,"byte_end":19436,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19441,"byte_end":19444,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19449,"byte_end":19456,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19461,"byte_end":19488,"line_start":177,"line_end":177,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19493,"byte_end":19524,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19529,"byte_end":19532,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"10.1.0.0/16\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19537,"byte_end":19595,"line_start":180,"line_end":180,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(net.size(), 65536);","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19600,"byte_end":19634,"line_start":181,"line_end":181,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19639,"byte_end":19642,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let tinynet: Ipv4Network = \"0.0.0.0/32\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19647,"byte_end":19708,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(tinynet.size(), 1);","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19713,"byte_end":19747,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19752,"byte_end":19759,"line_start":185,"line_end":185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20586,"byte_end":20589,"line_start":208,"line_end":208,"column_start":12,"column_end":15},"name":"nth","qualname":"<Ipv4Network>::nth","value":"fn (&self, n: u32) -> Option<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `n`:th address within this network.\n The adresses are indexed from 0 and `n` must be smaller than the size of the network.","sig":null,"attributes":[{"value":"/ Returns the `n`:th address within this network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19897,"byte_end":19948,"line_start":191,"line_end":191,"column_start":5,"column_end":56}},{"value":"/ The adresses are indexed from 0 and `n` must be smaller than the size of the network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":19953,"byte_end":20042,"line_start":192,"line_end":192,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20047,"byte_end":20050,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20055,"byte_end":20069,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20074,"byte_end":20077,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20082,"byte_end":20089,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20094,"byte_end":20121,"line_start":197,"line_end":197,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20126,"byte_end":20157,"line_start":198,"line_end":198,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20162,"byte_end":20165,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"192.168.0.0/24\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20170,"byte_end":20231,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(net.nth(0).unwrap(), Ipv4Addr::new(192, 168, 0, 0));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20236,"byte_end":20303,"line_start":201,"line_end":201,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(net.nth(15).unwrap(), Ipv4Addr::new(192, 168, 0, 15));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20308,"byte_end":20377,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ assert!(net.nth(256).is_none());","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20382,"byte_end":20418,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20423,"byte_end":20426,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let net2: Ipv4Network = \"10.0.0.0/16\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20431,"byte_end":20490,"line_start":205,"line_end":205,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net2.nth(256).unwrap(), Ipv4Addr::new(10, 0, 1, 0));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20495,"byte_end":20562,"line_start":206,"line_end":206,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20567,"byte_end":20574,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":219},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":22248,"byte_end":22267,"line_start":267,"line_end":267,"column_start":12,"column_end":31},"name":"Ipv4NetworkIterator","qualname":"::ipv4::Ipv4NetworkIterator","value":"Ipv4NetworkIterator {  }","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":22931,"byte_end":22950,"line_start":297,"line_end":297,"column_start":8,"column_end":27},"name":"ipv4_mask_to_prefix","qualname":"::ipv4::ipv4_mask_to_prefix","value":"fn (mask: Ipv4Addr) -> Result<u8, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Ipv4Addr` network mask into a prefix.","sig":null,"attributes":[{"value":"/ Converts a `Ipv4Addr` network mask into a prefix.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":22786,"byte_end":22839,"line_start":294,"line_end":294,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":22840,"byte_end":22843,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":22844,"byte_end":22923,"line_start":296,"line_end":296,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":34156,"byte_end":34167,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"Ipv6Network","qualname":"::ipv6::Ipv6Network","value":"Ipv6Network {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" Represents a network range where the IP addresses are of v6\n","sig":null,"attributes":[{"value":"/ Represents a network range where the IP addresses are of v6","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":34013,"byte_end":34076,"line_start":7,"line_end":7,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":35009,"byte_end":35012,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv6Network>::new","value":"fn (addr: Ipv6Addr, prefix: u8) -> Result<Ipv6Network, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Ipv6Network` from any `Ipv6Addr` and a prefix denoting the network size.","sig":null,"attributes":[{"value":"/ Constructs a new `Ipv6Network` from any `Ipv6Addr` and a prefix denoting the network size.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":34801,"byte_end":34895,"line_start":36,"line_end":36,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":34900,"byte_end":34903,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ If the prefix is larger than 128 this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":34908,"byte_end":34997,"line_start":38,"line_end":38,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":35430,"byte_end":35442,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"with_netmask","qualname":"<Ipv6Network>::with_netmask","value":"fn (netaddr: Ipv6Addr, netmask: Ipv6Addr) -> Result<Self, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Ipv6Network` from a network address and a network mask.","sig":null,"attributes":[{"value":"/ Constructs a new `Ipv6Network` from a network address and a network mask.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":35244,"byte_end":35321,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":35326,"byte_end":35329,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If the netmask is not valid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":35334,"byte_end":35418,"line_start":49,"line_end":49,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":35880,"byte_end":35884,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"iter","qualname":"<Ipv6Network>::iter","value":"fn (&self) -> Ipv6NetworkIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `Ipv6Network`. Each call to `next` will return the next\n `Ipv6Addr` in the given network. `None` will be returned when there are no more\n addresses.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over `Ipv6Network`. Each call to `next` will return the next","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":35677,"byte_end":35761,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/ `Ipv6Addr` in the given network. `None` will be returned when there are no more","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":35766,"byte_end":35849,"line_start":60,"line_end":60,"column_start":5,"column_end":88}},{"value":"/ addresses.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":35854,"byte_end":35868,"line_start":61,"line_end":61,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36797,"byte_end":36804,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"network","qualname":"<Ipv6Network>::network","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the network denoted by this `Ipv6Network`.\n This means the lowest possible IPv6 address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the address of the network denoted by this `Ipv6Network`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36358,"byte_end":36427,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/ This means the lowest possible IPv6 address inside of the network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36432,"byte_end":36502,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36507,"byte_end":36510,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36515,"byte_end":36529,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36534,"byte_end":36537,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36542,"byte_end":36549,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36554,"byte_end":36581,"line_start":85,"line_end":85,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36586,"byte_end":36617,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36622,"byte_end":36625,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"2001:db8::/96\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36630,"byte_end":36690,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(net.network(), Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36695,"byte_end":36773,"line_start":89,"line_end":89,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36778,"byte_end":36785,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37394,"byte_end":37403,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Ipv6Network>::broadcast","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcast address of this `Ipv6Network`.\n This means the highest possible IPv4 address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the broadcast address of this `Ipv6Network`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":36955,"byte_end":37011,"line_start":97,"line_end":97,"column_start":5,"column_end":61}},{"value":"/ This means the highest possible IPv4 address inside of the network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37016,"byte_end":37087,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37092,"byte_end":37095,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37100,"byte_end":37114,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37119,"byte_end":37122,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37127,"byte_end":37134,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37139,"byte_end":37166,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37171,"byte_end":37202,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37207,"byte_end":37210,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"2001:db8::/96\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37215,"byte_end":37275,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(net.broadcast(), Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0xffff, 0xffff));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37280,"byte_end":37370,"line_start":107,"line_end":107,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37375,"byte_end":37382,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37576,"byte_end":37578,"line_start":115,"line_end":115,"column_start":12,"column_end":14},"name":"ip","qualname":"<Ipv6Network>::ip","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37636,"byte_end":37642,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Ipv6Network>::prefix","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37764,"byte_end":37776,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"is_subnet_of","qualname":"<Ipv6Network>::is_subnet_of","value":"fn (self, other: Ipv6Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv6Network` is a subnet of the other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv6Network` is a subnet of the other.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37689,"byte_end":37752,"line_start":123,"line_end":123,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37974,"byte_end":37988,"line_start":129,"line_end":129,"column_start":12,"column_end":26},"name":"is_supernet_of","qualname":"<Ipv6Network>::is_supernet_of","value":"fn (self, other: Ipv6Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv6Network` is a supernet of the other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv6Network` is a supernet of the other.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":37897,"byte_end":37962,"line_start":128,"line_end":128,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38148,"byte_end":38156,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"overlaps","qualname":"<Ipv6Network>::overlaps","value":"fn (self, other: Ipv6Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv6Network` is partly contained in other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv6Network` is partly contained in other.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38069,"byte_end":38136,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38956,"byte_end":38960,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"mask","qualname":"<Ipv6Network>::mask","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the mask for this `Ipv6Network`.\n That means the `prefix` most significant bits will be 1 and the rest 0","sig":null,"attributes":[{"value":"/ Returns the mask for this `Ipv6Network`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38373,"byte_end":38417,"line_start":140,"line_end":140,"column_start":5,"column_end":49}},{"value":"/ That means the `prefix` most significant bits will be 1 and the rest 0","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38422,"byte_end":38496,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38501,"byte_end":38504,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38509,"byte_end":38523,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38528,"byte_end":38531,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38536,"byte_end":38543,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38548,"byte_end":38575,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38580,"byte_end":38611,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38616,"byte_end":38619,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"ff01::0\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38624,"byte_end":38678,"line_start":149,"line_end":149,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(net.mask(), Ipv6Addr::new(0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38683,"byte_end":38789,"line_start":150,"line_end":150,"column_start":5,"column_end":111}},{"value":"/ let net: Ipv6Network = \"ff01::0/32\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38794,"byte_end":38851,"line_start":151,"line_end":151,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(net.mask(), Ipv6Addr::new(0xffff, 0xffff, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38856,"byte_end":38932,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":38937,"byte_end":38944,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39801,"byte_end":39809,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"contains","qualname":"<Ipv6Network>::contains","value":"fn (&self, ip: Ipv6Addr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a given `Ipv6Addr` is in this `Ipv6Network`","sig":null,"attributes":[{"value":"/ Checks if a given `Ipv6Addr` is in this `Ipv6Network`","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39380,"byte_end":39437,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39442,"byte_end":39445,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39450,"byte_end":39464,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39469,"byte_end":39472,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39477,"byte_end":39484,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39489,"byte_end":39516,"line_start":170,"line_end":170,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39521,"byte_end":39552,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39557,"byte_end":39560,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"ff01::0/32\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39565,"byte_end":39622,"line_start":173,"line_end":173,"column_start":5,"column_end":62}},{"value":"/ assert!(net.contains(Ipv6Addr::new(0xff01, 0, 0, 0, 0, 0, 0, 0x1)));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39627,"byte_end":39699,"line_start":174,"line_end":174,"column_start":5,"column_end":77}},{"value":"/ assert!(!net.contains(Ipv6Addr::new(0xffff, 0, 0, 0, 0, 0, 0, 0x1)));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39704,"byte_end":39777,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":39782,"byte_end":39789,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40574,"byte_end":40578,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"size","qualname":"<Ipv6Network>::size","value":"fn (&self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns number of possible host addresses in this `Ipv6Network`.","sig":null,"attributes":[{"value":"/ Returns number of possible host addresses in this `Ipv6Network`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40120,"byte_end":40188,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40193,"byte_end":40196,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40201,"byte_end":40215,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40220,"byte_end":40223,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40228,"byte_end":40235,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40240,"byte_end":40267,"line_start":193,"line_end":193,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40272,"byte_end":40303,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40308,"byte_end":40311,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"ff01::0/32\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40316,"byte_end":40373,"line_start":196,"line_end":196,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(net.size(), 79228162514264337593543950336);","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40378,"byte_end":40436,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40441,"byte_end":40444,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let tinynet: Ipv6Network = \"ff01::0/128\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40449,"byte_end":40511,"line_start":199,"line_end":199,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(tinynet.size(), 1);","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40516,"byte_end":40550,"line_start":200,"line_end":200,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40555,"byte_end":40562,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":256},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":41391,"byte_end":41410,"line_start":232,"line_end":232,"column_start":12,"column_end":31},"name":"Ipv6NetworkIterator","qualname":"::ipv6::Ipv6NetworkIterator","value":"Ipv6NetworkIterator {  }","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":42237,"byte_end":42256,"line_start":267,"line_end":267,"column_start":8,"column_end":27},"name":"ipv6_mask_to_prefix","qualname":"::ipv6::ipv6_mask_to_prefix","value":"fn (mask: Ipv6Addr) -> Result<u8, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Ipv6Addr` network mask into a prefix.\n If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.\n","sig":null,"attributes":[{"value":"/ Converts a `Ipv6Addr` network mask into a prefix.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":42096,"byte_end":42149,"line_start":265,"line_end":265,"column_start":1,"column_end":54}},{"value":"/ If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":42150,"byte_end":42229,"line_start":266,"line_end":266,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":264},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":762,"byte_end":764,"line_start":24,"line_end":24,"column_start":5,"column_end":7},"name":"V4","qualname":"::IpNetwork::V4","value":"IpNetwork::V4(Ipv4Network)","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":267},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":783,"byte_end":785,"line_start":25,"line_end":25,"column_start":5,"column_end":7},"name":"V6","qualname":"::IpNetwork::V6","value":"IpNetwork::V6(Ipv6Network)","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":263},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":746,"byte_end":755,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"name":"IpNetwork","qualname":"::IpNetwork","value":"IpNetwork::{V4, V6}","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":267}],"decl_id":null,"docs":" Represents a generic network range. This type can have two variants:\n the v4 and the v6 case.\n","sig":null,"attributes":[{"value":"/ Represents a generic network range. This type can have two variants:","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":568,"byte_end":640,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ the v4 and the v6 case.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":641,"byte_end":668,"line_start":21,"line_end":21,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":294},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1559,"byte_end":1561,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"V4","qualname":"::NetworkSize::V4","value":"NetworkSize::V4(u32)","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":297},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1572,"byte_end":1574,"line_start":53,"line_end":53,"column_start":5,"column_end":7},"name":"V6","qualname":"::NetworkSize::V6","value":"NetworkSize::V6(u128)","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":293},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1541,"byte_end":1552,"line_start":51,"line_end":51,"column_start":10,"column_end":21},"name":"NetworkSize","qualname":"::NetworkSize","value":"NetworkSize::{V4, V6}","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":297}],"decl_id":null,"docs":" Represents a generic network size. For IPv4, the max size is a u32 and for IPv6, it is a u128\n","sig":null,"attributes":[{"value":"/ Represents a generic network size. For IPv4, the max size is a u32 and for IPv6, it is a u128","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1366,"byte_end":1463,"line_start":49,"line_end":49,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1894,"byte_end":1897,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<IpNetwork>::new","value":"fn (ip: IpAddr, prefix: u8) -> Result<IpNetwork, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `IpNetwork` from a given `IpAddr` and a prefix denoting the\n network size. If the prefix is larger than 32 (for IPv4) or 128 (for IPv6), this\n will raise an `IpNetworkError::InvalidPrefix` error. Support for IPv6 is not\n complete yet.\n","sig":null,"attributes":[{"value":"/ Constructs a new `IpNetwork` from a given `IpAddr` and a prefix denoting the","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1606,"byte_end":1686,"line_start":57,"line_end":57,"column_start":5,"column_end":85}},{"value":"/ network size. If the prefix is larger than 32 (for IPv4) or 128 (for IPv6), this","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1691,"byte_end":1775,"line_start":58,"line_end":58,"column_start":5,"column_end":89}},{"value":"/ will raise an `IpNetworkError::InvalidPrefix` error. Support for IPv6 is not","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1780,"byte_end":1860,"line_start":59,"line_end":59,"column_start":5,"column_end":85}},{"value":"/ complete yet.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1865,"byte_end":1882,"line_start":60,"line_end":60,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2341,"byte_end":2353,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"with_netmask","qualname":"<IpNetwork>::with_netmask","value":"fn (netaddr: IpAddr, netmask: IpAddr) -> Result<Self, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `IpNetwork` from a network address and a network mask.","sig":null,"attributes":[{"value":"/ Constructs a new `IpNetwork` from a network address and a network mask.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2157,"byte_end":2232,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2237,"byte_end":2240,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ If the netmask is not valid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2245,"byte_end":2329,"line_start":70,"line_end":70,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2576,"byte_end":2578,"line_start":77,"line_end":77,"column_start":12,"column_end":14},"name":"ip","qualname":"<IpNetwork>::ip","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP part of a given `IpNetwork`\n","sig":null,"attributes":[{"value":"/ Returns the IP part of a given `IpNetwork`","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2518,"byte_end":2564,"line_start":76,"line_end":76,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3234,"byte_end":3240,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IpNetwork>::prefix","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prefix of the given `IpNetwork`","sig":null,"attributes":[{"value":"/ Returns the prefix of the given `IpNetwork`","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2753,"byte_end":2800,"line_start":84,"line_end":84,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2805,"byte_end":2808,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2813,"byte_end":2826,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2831,"byte_end":2838,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2843,"byte_end":2872,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2877,"byte_end":2880,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(IpNetwork::V4(\"10.9.0.1\".parse().unwrap()).prefix(), 32u8);","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2885,"byte_end":2959,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(IpNetwork::V4(\"10.9.0.32/16\".parse().unwrap()).prefix(), 16u8);","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":2964,"byte_end":3042,"line_start":91,"line_end":91,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3047,"byte_end":3050,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(IpNetwork::V6(\"ff01::0\".parse().unwrap()).prefix(), 128u8);","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3055,"byte_end":3129,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(IpNetwork::V6(\"ff01::0/32\".parse().unwrap()).prefix(), 32u8);","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3134,"byte_end":3210,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3215,"byte_end":3222,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3963,"byte_end":3970,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"network","qualname":"<IpNetwork>::network","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the network denoted by this `IpNetwork`.\n This means the lowest possible IP address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the address of the network denoted by this `IpNetwork`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3395,"byte_end":3462,"line_start":103,"line_end":103,"column_start":5,"column_end":72}},{"value":"/ This means the lowest possible IP address inside of the network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3467,"byte_end":3535,"line_start":104,"line_end":104,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3540,"byte_end":3543,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3548,"byte_end":3562,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3567,"byte_end":3570,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3575,"byte_end":3582,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use std::net::{Ipv4Addr, Ipv6Addr};","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3587,"byte_end":3626,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3631,"byte_end":3660,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3665,"byte_end":3668,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let net: IpNetwork = \"10.1.9.32/16\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3673,"byte_end":3730,"line_start":112,"line_end":112,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(net.network(), Ipv4Addr::new(10, 1, 0, 0));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3735,"byte_end":3793,"line_start":113,"line_end":113,"column_start":5,"column_end":63}},{"value":"/ let net: IpNetwork = \"2001:db8::/96\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3798,"byte_end":3856,"line_start":114,"line_end":114,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(net.network(), Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3861,"byte_end":3939,"line_start":115,"line_end":115,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":3944,"byte_end":3951,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4579,"byte_end":4588,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<IpNetwork>::broadcast","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcasting address of this `IpNetwork`.\n This means the highest possible IP address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the broadcasting address of this `IpNetwork`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4155,"byte_end":4212,"line_start":124,"line_end":124,"column_start":5,"column_end":62}},{"value":"/ This means the highest possible IP address inside of the network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4217,"byte_end":4286,"line_start":125,"line_end":125,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4291,"byte_end":4294,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4299,"byte_end":4313,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4318,"byte_end":4321,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4326,"byte_end":4333,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4338,"byte_end":4365,"line_start":130,"line_end":130,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::{IpNetwork, Ipv4Network};","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4370,"byte_end":4414,"line_start":131,"line_end":131,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4419,"byte_end":4422,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"10.9.0.32/16\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4427,"byte_end":4486,"line_start":133,"line_end":133,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net.broadcast(), Ipv4Addr::new(10, 9, 255, 255));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4491,"byte_end":4555,"line_start":134,"line_end":134,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4560,"byte_end":4567,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5645,"byte_end":5649,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"mask","qualname":"<IpNetwork>::mask","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the mask for this `IpNetwork`.\n That means the `prefix` most significant bits will be 1 and the rest 0","sig":null,"attributes":[{"value":"/ Returns the mask for this `IpNetwork`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4777,"byte_end":4819,"line_start":143,"line_end":143,"column_start":5,"column_end":47}},{"value":"/ That means the `prefix` most significant bits will be 1 and the rest 0","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4824,"byte_end":4898,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4903,"byte_end":4906,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4911,"byte_end":4924,"line_start":146,"line_end":146,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4929,"byte_end":4932,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4937,"byte_end":4944,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4949,"byte_end":4978,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/ use std::net::{Ipv4Addr, Ipv6Addr};","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":4983,"byte_end":5022,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5027,"byte_end":5030,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let v4_net: IpNetwork = \"10.9.0.1\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5035,"byte_end":5091,"line_start":152,"line_end":152,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(v4_net.mask(), Ipv4Addr::new(255, 255, 255, 255));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5096,"byte_end":5161,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/ let v4_net: IpNetwork = \"10.9.0.32/16\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5166,"byte_end":5226,"line_start":154,"line_end":154,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(v4_net.mask(), Ipv4Addr::new(255, 255, 0, 0));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5231,"byte_end":5292,"line_start":155,"line_end":155,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5297,"byte_end":5300,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ let v6_net: IpNetwork = \"ff01::0\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5305,"byte_end":5360,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(v6_net.mask(), Ipv6Addr::new(0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5365,"byte_end":5474,"line_start":158,"line_end":158,"column_start":5,"column_end":114}},{"value":"/ let v6_net: IpNetwork = \"ff01::0/32\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5479,"byte_end":5537,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(v6_net.mask(), Ipv6Addr::new(0xffff, 0xffff, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5542,"byte_end":5621,"line_start":160,"line_end":160,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5626,"byte_end":5633,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6210,"byte_end":6217,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"is_ipv4","qualname":"<IpNetwork>::is_ipv4","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the IP in this `IpNetwork` is a valid IPv4 address,\n false if it's a valid IPv6 address.","sig":null,"attributes":[{"value":"/ Returns true if the IP in this `IpNetwork` is a valid IPv4 address,","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5828,"byte_end":5899,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ false if it's a valid IPv6 address.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5904,"byte_end":5943,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5948,"byte_end":5951,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5956,"byte_end":5969,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5974,"byte_end":5977,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5982,"byte_end":5988,"line_start":174,"line_end":174,"column_start":5,"column_end":11}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":5993,"byte_end":6022,"line_start":175,"line_end":175,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6027,"byte_end":6030,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let v4: IpNetwork = IpNetwork::V4(\"10.9.0.32/16\".parse().unwrap());","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6035,"byte_end":6106,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(v4.is_ipv4(), true);","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6111,"byte_end":6146,"line_start":178,"line_end":178,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v4.is_ipv6(), false);","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6151,"byte_end":6187,"line_start":179,"line_end":179,"column_start":5,"column_end":41}},{"value":"/```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6192,"byte_end":6198,"line_start":180,"line_end":180,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6735,"byte_end":6742,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"is_ipv6","qualname":"<IpNetwork>::is_ipv6","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the IP in this `IpNetwork` is a valid IPv6 address,\n false if it's a valid IPv4 address.","sig":null,"attributes":[{"value":"/ Returns true if the IP in this `IpNetwork` is a valid IPv6 address,","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6355,"byte_end":6426,"line_start":188,"line_end":188,"column_start":5,"column_end":76}},{"value":"/ false if it's a valid IPv4 address.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6431,"byte_end":6470,"line_start":189,"line_end":189,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6475,"byte_end":6478,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6483,"byte_end":6496,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6501,"byte_end":6504,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6509,"byte_end":6515,"line_start":193,"line_end":193,"column_start":5,"column_end":11}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6520,"byte_end":6549,"line_start":194,"line_end":194,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6554,"byte_end":6557,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let v6: IpNetwork = IpNetwork::V6(\"ff01::0/32\".parse().unwrap());","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6562,"byte_end":6631,"line_start":196,"line_end":196,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(v6.is_ipv6(), true);","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6636,"byte_end":6671,"line_start":197,"line_end":197,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v6.is_ipv4(), false);","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6676,"byte_end":6712,"line_start":198,"line_end":198,"column_start":5,"column_end":41}},{"value":"/```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":6717,"byte_end":6723,"line_start":199,"line_end":199,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7597,"byte_end":7605,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"contains","qualname":"<IpNetwork>::contains","value":"fn (&self, ip: IpAddr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a given `IpAddr` is in this `IpNetwork`","sig":null,"attributes":[{"value":"/ Checks if a given `IpAddr` is in this `IpNetwork`","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7067,"byte_end":7120,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7125,"byte_end":7128,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7133,"byte_end":7147,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7152,"byte_end":7155,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7160,"byte_end":7167,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use std::net::IpAddr;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7172,"byte_end":7197,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7202,"byte_end":7231,"line_start":217,"line_end":217,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7236,"byte_end":7239,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let net: IpNetwork = \"127.0.0.0/24\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7244,"byte_end":7301,"line_start":219,"line_end":219,"column_start":5,"column_end":62}},{"value":"/ let ip1: IpAddr = \"127.0.0.1\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7306,"byte_end":7357,"line_start":220,"line_end":220,"column_start":5,"column_end":56}},{"value":"/ let ip2: IpAddr = \"172.0.0.1\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7362,"byte_end":7413,"line_start":221,"line_end":221,"column_start":5,"column_end":56}},{"value":"/ let ip4: IpAddr = \"::1\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7418,"byte_end":7463,"line_start":222,"line_end":222,"column_start":5,"column_end":50}},{"value":"/ assert!(net.contains(ip1));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7468,"byte_end":7499,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/ assert!(!net.contains(ip2));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7504,"byte_end":7536,"line_start":224,"line_end":224,"column_start":5,"column_end":37}},{"value":"/ assert!(!net.contains(ip4));","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7541,"byte_end":7573,"line_start":225,"line_end":225,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7578,"byte_end":7585,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":8165,"byte_end":8169,"line_start":246,"line_end":246,"column_start":12,"column_end":16},"name":"size","qualname":"<IpNetwork>::size","value":"fn (&self) -> NetworkSize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of possible host addresses in this `IpAddr`","sig":null,"attributes":[{"value":"/ Returns the number of possible host addresses in this `IpAddr`","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7848,"byte_end":7914,"line_start":235,"line_end":235,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7919,"byte_end":7922,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7927,"byte_end":7941,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7946,"byte_end":7949,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7954,"byte_end":7961,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ use ipnetwork::{IpNetwork, NetworkSize};","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":7966,"byte_end":8010,"line_start":240,"line_end":240,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":8015,"byte_end":8018,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":8023,"byte_end":8026,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let net: IpNetwork = \"127.0.0.0/24\".parse().unwrap();","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":8031,"byte_end":8088,"line_start":243,"line_end":243,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(net.size(), NetworkSize::V4(256))","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":8093,"byte_end":8141,"line_start":244,"line_end":244,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":8146,"byte_end":8153,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":8534,"byte_end":8538,"line_start":256,"line_end":256,"column_start":12,"column_end":16},"name":"iter","qualname":"<IpNetwork>::iter","value":"fn (&self) -> IpNetworkIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the addresses contained in the network.","sig":null,"attributes":[{"value":"/ Returns an iterator over the addresses contained in the network.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":8367,"byte_end":8435,"line_start":253,"line_end":253,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":8440,"byte_end":8443,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This lists all the addresses in the network range, in ascending order.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":8448,"byte_end":8522,"line_start":255,"line_end":255,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":159},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":10556,"byte_end":10573,"line_start":328,"line_end":328,"column_start":12,"column_end":29},"name":"IpNetworkIterator","qualname":"::IpNetworkIterator","value":"IpNetworkIterator {  }","parent":null,"children":[{"krate":0,"index":160}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":11239,"byte_end":11256,"line_start":352,"line_end":352,"column_start":8,"column_end":25},"name":"ip_mask_to_prefix","qualname":"::ip_mask_to_prefix","value":"fn (mask: IpAddr) -> Result<u8, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `IpAddr` network mask into a prefix.\n If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.\n","sig":null,"attributes":[{"value":"/ Converts a `IpAddr` network mask into a prefix.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":11100,"byte_end":11151,"line_start":350,"line_end":350,"column_start":1,"column_end":52}},{"value":"/ If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":11152,"byte_end":11231,"line_start":351,"line_end":351,"column_start":1,"column_end":80}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/common.rs","byte_start":12188,"byte_end":12202,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/common.rs","byte_start":12572,"byte_end":12586,"line_start":22,"line_end":22,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":14236,"byte_end":14247,"line_start":14,"line_end":14,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":14551,"byte_end":14562,"line_start":25,"line_end":25,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":14746,"byte_end":14757,"line_start":34,"line_end":34,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20822,"byte_end":20833,"line_start":218,"line_end":218,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":21386,"byte_end":21397,"line_start":237,"line_end":237,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":22071,"byte_end":22082,"line_start":257,"line_end":257,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":22328,"byte_end":22347,"line_start":272,"line_end":272,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":34273,"byte_end":34284,"line_start":15,"line_end":15,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":34588,"byte_end":34599,"line_start":26,"line_end":26,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":34783,"byte_end":34794,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40717,"byte_end":40728,"line_start":208,"line_end":208,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":41213,"byte_end":41224,"line_start":222,"line_end":222,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":41473,"byte_end":41492,"line_start":237,"line_end":237,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":41953,"byte_end":41964,"line_start":259,"line_end":259,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":867,"byte_end":876,"line_start":29,"line_end":29,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1178,"byte_end":1187,"line_start":40,"line_end":40,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1590,"byte_end":1599,"line_start":56,"line_end":56,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":9333,"byte_end":9342,"line_start":279,"line_end":279,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":9744,"byte_end":9753,"line_start":292,"line_end":292,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":9862,"byte_end":9871,"line_start":298,"line_end":298,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":9975,"byte_end":9984,"line_start":304,"line_end":304,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":10222,"byte_end":10231,"line_start":313,"line_end":313,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":10632,"byte_end":10649,"line_start":332,"line_end":332,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/common.rs","byte_start":12188,"byte_end":12202,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/common.rs","byte_start":12572,"byte_end":12586,"line_start":22,"line_end":22,"column_start":16,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":169},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":14236,"byte_end":14247,"line_start":14,"line_end":14,"column_start":39,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":189},"to":{"krate":15,"index":1191}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":14551,"byte_end":14562,"line_start":25,"line_end":25,"column_start":27,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":189},"to":{"krate":15,"index":1679}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":14746,"byte_end":14757,"line_start":34,"line_end":34,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":20822,"byte_end":20833,"line_start":218,"line_end":218,"column_start":23,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":21386,"byte_end":21397,"line_start":237,"line_end":237,"column_start":18,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":7498}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":22071,"byte_end":22082,"line_start":257,"line_end":257,"column_start":25,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv4.rs","byte_start":22328,"byte_end":22347,"line_start":272,"line_end":272,"column_start":19,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":219},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":34273,"byte_end":34284,"line_start":15,"line_end":15,"column_start":39,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":226},"to":{"krate":15,"index":1191}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":34588,"byte_end":34599,"line_start":26,"line_end":26,"column_start":27,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":226},"to":{"krate":15,"index":1679}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":34783,"byte_end":34794,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":40717,"byte_end":40728,"line_start":208,"line_end":208,"column_start":18,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":7498}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":41213,"byte_end":41224,"line_start":222,"line_end":222,"column_start":25,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":41473,"byte_end":41492,"line_start":237,"line_end":237,"column_start":19,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/ipv6.rs","byte_start":41953,"byte_end":41964,"line_start":259,"line_end":259,"column_start":23,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":867,"byte_end":876,"line_start":29,"line_end":29,"column_start":39,"column_end":48},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":263},"to":{"krate":15,"index":1191}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1178,"byte_end":1187,"line_start":40,"line_end":40,"column_start":27,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":263},"to":{"krate":15,"index":1679}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":1590,"byte_end":1599,"line_start":56,"line_end":56,"column_start":6,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":9333,"byte_end":9342,"line_start":279,"line_end":279,"column_start":18,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":7498}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":9744,"byte_end":9753,"line_start":292,"line_end":292,"column_start":28,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":9862,"byte_end":9871,"line_start":298,"line_end":298,"column_start":28,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":9975,"byte_end":9984,"line_start":304,"line_end":304,"column_start":23,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":10222,"byte_end":10231,"line_start":313,"line_end":313,"column_start":23,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/pstiegele/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.16.0/src/lib.rs","byte_start":10632,"byte_end":10649,"line_start":332,"line_end":332,"column_start":19,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":4773}}]}